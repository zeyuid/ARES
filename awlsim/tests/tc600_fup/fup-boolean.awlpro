<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim project file generated by awlsim-0.66.0-pre -->
<awlsim_project date_create="2012-08-13 00:00:00.000000"
                date_modify="2018-07-08 18:00:23.429434"
                format_version="1">
	<!-- CPU core configuration -->
	<cpu>
		<!-- CPU core feature specification -->
		<specs call_stack_size="256"
		       nr_accus="2"
		       nr_counters="256"
		       nr_flags="2048"
		       nr_inputs="128"
		       nr_localbytes="1024"
		       nr_outputs="128"
		       nr_timers="256"
		       parenthesis_stack_size="7" />

		<!-- CPU core configuration -->
		<config clock_memory_byte="-1"
		        cycle_time_limit_us="1000000"
		        ext_insns_enable="1"
		        mnemonics="2"
		        ob_startinfo_enable="0"
		        run_time_limit_us="-1" />
	</cpu>

	<!-- AWL/STL language configuration -->
	<language_awl>
		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="Main"
		        type="0"><![CDATA[
ORGANIZATION_BLOCK OB 1
BEGIN
	CALL "FC_TEST_assign"
	CALL "FC_TEST_and_and_or"
	CALL "FC_TEST_branch"
	CALL "FC_TEST_not_1"
	CALL "FC_TEST_not_2"
	CALL "FC_TEST_sr_1"
	CALL "FC_TEST_sr_2"
	CALL "FC_TEST_sr_3"
	CALL "FC_TEST_sr_4"
	CALL "FC_TEST_sr_5"
	CALL "FC_TEST_sr_6"
	CALL "FC_TEST_edge_1"
	CALL "FC_TEST_edge_2"
	
	CALL SFC 46 // STOP CPU
END_ORGANIZATION_BLOCK

]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST assign"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_assign" : VOID
BEGIN
	// Test: "FC_assign"
	// Equations:
	// OUT0 = IN0 * IN1
	// OUT1 = IN0 * IN1
	// OUT2 = IN0 * IN1
	
	CALL "FC_assign" (
		IN0 := FALSE,
		IN1 := FALSE,
		OUT0 := M 0.0,
		OUT1 := M 0.1,
		OUT2 := M 0.2,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	
	
	CALL "FC_assign" (
		IN0 := TRUE,
		IN1 := FALSE,
		OUT0 := M 0.0,
		OUT1 := M 0.1,
		OUT2 := M 0.2,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	
	
	CALL "FC_assign" (
		IN0 := FALSE,
		IN1 := TRUE,
		OUT0 := M 0.0,
		OUT1 := M 0.1,
		OUT2 := M 0.2,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	
	
	CALL "FC_assign" (
		IN0 := TRUE,
		IN1 := TRUE,
		OUT0 := M 0.0,
		OUT1 := M 0.1,
		OUT2 := M 0.2,
	)
	__ASSERT==	M 0.0, TRUE
	__ASSERT==	M 0.1, TRUE
	__ASSERT==	M 0.2, TRUE
	
	
	BE
END_FUNCTION

]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST and_and_or"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_and_and_or" : VOID
BEGIN
	// Test: "FC_and_and_or"
	// Equations:
	// RET_VAL = (INP0 * INP1) + (INP2 * INP3)
	
	CALL	"FC_and_and_or" (
		INP0	:= FALSE,
		INP1	:= FALSE,
		INP2	:= FALSE,
		INP3	:= FALSE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	FALSE
	
	CALL	"FC_and_and_or" (
		INP0	:= TRUE,
		INP1	:= FALSE,
		INP2	:= FALSE,
		INP3	:= FALSE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	FALSE
	
	CALL	"FC_and_and_or" (
		INP0	:= FALSE,
		INP1	:= TRUE,
		INP2	:= FALSE,
		INP3	:= FALSE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	FALSE
	
	CALL	"FC_and_and_or" (
		INP0	:= TRUE,
		INP1	:= TRUE,
		INP2	:= FALSE,
		INP3	:= FALSE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	TRUE
	
	CALL	"FC_and_and_or" (
		INP0	:= FALSE,
		INP1	:= FALSE,
		INP2	:= TRUE,
		INP3	:= FALSE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	FALSE
	
	CALL	"FC_and_and_or" (
		INP0	:= TRUE,
		INP1	:= FALSE,
		INP2	:= TRUE,
		INP3	:= FALSE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	FALSE
	
	CALL	"FC_and_and_or" (
		INP0	:= FALSE,
		INP1	:= TRUE,
		INP2	:= TRUE,
		INP3	:= FALSE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	FALSE
	
	CALL	"FC_and_and_or" (
		INP0	:= TRUE,
		INP1	:= TRUE,
		INP2	:= TRUE,
		INP3	:= FALSE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	TRUE
	
	CALL	"FC_and_and_or" (
		INP0	:= FALSE,
		INP1	:= FALSE,
		INP2	:= FALSE,
		INP3	:= TRUE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	FALSE
	
	CALL	"FC_and_and_or" (
		INP0	:= TRUE,
		INP1	:= FALSE,
		INP2	:= FALSE,
		INP3	:= TRUE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	FALSE
	
	CALL	"FC_and_and_or" (
		INP0	:= FALSE,
		INP1	:= TRUE,
		INP2	:= FALSE,
		INP3	:= TRUE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	FALSE
	
	CALL	"FC_and_and_or" (
		INP0	:= TRUE,
		INP1	:= TRUE,
		INP2	:= FALSE,
		INP3	:= TRUE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	TRUE
	
	CALL	"FC_and_and_or" (
		INP0	:= FALSE,
		INP1	:= FALSE,
		INP2	:= TRUE,
		INP3	:= TRUE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	TRUE
	
	CALL	"FC_and_and_or" (
		INP0	:= TRUE,
		INP1	:= FALSE,
		INP2	:= TRUE,
		INP3	:= TRUE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	TRUE
	
	CALL	"FC_and_and_or" (
		INP0	:= FALSE,
		INP1	:= TRUE,
		INP2	:= TRUE,
		INP3	:= TRUE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	TRUE
	
	CALL	"FC_and_and_or" (
		INP0	:= TRUE,
		INP1	:= TRUE,
		INP2	:= TRUE,
		INP3	:= TRUE,
		RET_VAL	:= M 0.0,
	)
	__ASSERT==	M 0.0,	TRUE
	
	BE
END_FUNCTION

]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST branch"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_branch" : VOID
BEGIN
	// Test: "FC_branch"
	// Equations:
	// OUT10 = (IN00 :+: IN01) * IN10
	// OUT20 = (IN00 :+: IN01) * IN20
	// OUT40 = IN30 * IN40
	// OUT50 = IN30 * IN50
	// OUT60 = IN60 :+: IN61
	// OUT61 = IN60 :+: IN61
	// OUT70 = (IN60 :+: IN61) :+: IN70
	// OUT80 = IN80 :+: IN81
	// OUT81 = IN80 :+: IN81
	// OUT90 = (IN80 :+: IN81) :+: IN90
	
	
	CALL "FC_branch" (
		IN00 := FALSE,
		IN01 := FALSE,
		IN10 := FALSE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := FALSE,
		IN01 := TRUE,
		IN10 := FALSE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := TRUE,
		IN01 := FALSE,
		IN10 := FALSE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := TRUE,
		IN01 := FALSE,
		IN10 := TRUE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, TRUE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := TRUE,
		IN01 := FALSE,
		IN10 := FALSE,
		IN20 := TRUE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, TRUE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := TRUE,
		IN01 := FALSE,
		IN10 := TRUE,
		IN20 := TRUE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, TRUE
	__ASSERT==	M 0.1, TRUE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := TRUE,
		IN01 := FALSE,
		IN10 := TRUE,
		IN20 := TRUE,
		
		IN30 := TRUE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, TRUE
	__ASSERT==	M 0.1, TRUE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := TRUE,
		IN01 := FALSE,
		IN10 := TRUE,
		IN20 := TRUE,
		
		IN30 := FALSE,
		IN40 := TRUE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, TRUE
	__ASSERT==	M 0.1, TRUE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := TRUE,
		IN01 := FALSE,
		IN10 := TRUE,
		IN20 := TRUE,
		
		IN30 := TRUE,
		IN40 := TRUE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, TRUE
	__ASSERT==	M 0.1, TRUE
	__ASSERT==	M 0.2, TRUE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := TRUE,
		IN01 := FALSE,
		IN10 := TRUE,
		IN20 := TRUE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := TRUE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, TRUE
	__ASSERT==	M 0.1, TRUE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := TRUE,
		IN01 := FALSE,
		IN10 := TRUE,
		IN20 := TRUE,
		
		IN30 := TRUE,
		IN40 := FALSE,
		IN50 := TRUE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, TRUE
	__ASSERT==	M 0.1, TRUE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, TRUE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := TRUE,
		IN01 := FALSE,
		IN10 := TRUE,
		IN20 := TRUE,
		
		IN30 := FALSE,
		IN40 := TRUE,
		IN50 := TRUE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, TRUE
	__ASSERT==	M 0.1, TRUE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := TRUE,
		IN01 := FALSE,
		IN10 := TRUE,
		IN20 := TRUE,
		
		IN30 := TRUE,
		IN40 := TRUE,
		IN50 := TRUE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, TRUE
	__ASSERT==	M 0.1, TRUE
	__ASSERT==	M 0.2, TRUE
	__ASSERT==	M 0.3, TRUE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := FALSE,
		IN01 := FALSE,
		IN10 := FALSE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := FALSE,
		IN01 := FALSE,
		IN10 := FALSE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := TRUE,
		IN61 := FALSE,
		IN70 := FALSE,
		
		IN80 := TRUE,
		IN81 := FALSE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, TRUE
	__ASSERT==	M 0.5, TRUE
	__ASSERT==	M 0.6, TRUE
	__ASSERT==	M 0.7, TRUE
	__ASSERT==	M 1.0, TRUE
	__ASSERT==	M 1.1, TRUE
	
	
	CALL "FC_branch" (
		IN00 := FALSE,
		IN01 := FALSE,
		IN10 := FALSE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := TRUE,
		IN70 := FALSE,
		
		IN80 := FALSE,
		IN81 := TRUE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, TRUE
	__ASSERT==	M 0.5, TRUE
	__ASSERT==	M 0.6, TRUE
	__ASSERT==	M 0.7, TRUE
	__ASSERT==	M 1.0, TRUE
	__ASSERT==	M 1.1, TRUE
	
	
	CALL "FC_branch" (
		IN00 := FALSE,
		IN01 := FALSE,
		IN10 := FALSE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := TRUE,
		IN61 := TRUE,
		IN70 := FALSE,
		
		IN80 := TRUE,
		IN81 := TRUE,
		IN90 := FALSE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := FALSE,
		IN01 := FALSE,
		IN10 := FALSE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := FALSE,
		IN70 := TRUE,
		
		IN80 := FALSE,
		IN81 := FALSE,
		IN90 := TRUE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, TRUE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, TRUE
	
	
	CALL "FC_branch" (
		IN00 := FALSE,
		IN01 := FALSE,
		IN10 := FALSE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := TRUE,
		IN61 := FALSE,
		IN70 := TRUE,
		
		IN80 := TRUE,
		IN81 := FALSE,
		IN90 := TRUE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, TRUE
	__ASSERT==	M 0.5, TRUE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, TRUE
	__ASSERT==	M 1.0, TRUE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := FALSE,
		IN01 := FALSE,
		IN10 := FALSE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := FALSE,
		IN61 := TRUE,
		IN70 := TRUE,
		
		IN80 := FALSE,
		IN81 := TRUE,
		IN90 := TRUE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, TRUE
	__ASSERT==	M 0.5, TRUE
	__ASSERT==	M 0.6, FALSE
	__ASSERT==	M 0.7, TRUE
	__ASSERT==	M 1.0, TRUE
	__ASSERT==	M 1.1, FALSE
	
	
	CALL "FC_branch" (
		IN00 := FALSE,
		IN01 := FALSE,
		IN10 := FALSE,
		IN20 := FALSE,
		
		IN30 := FALSE,
		IN40 := FALSE,
		IN50 := FALSE,
		
		IN60 := TRUE,
		IN61 := TRUE,
		IN70 := TRUE,
		
		IN80 := TRUE,
		IN81 := TRUE,
		IN90 := TRUE,
		
		OUT10 := M 0.0,
		OUT20 := M 0.1,
		OUT40 := M 0.2,
		OUT50 := M 0.3,
		OUT60 := M 0.4,
		OUT61 := M 0.5,
		OUT70 := M 0.6,
		OUT80 := M 0.7,
		OUT81 := M 1.0,
		OUT90 := M 1.1,
	)
	__ASSERT==	M 0.0, FALSE
	__ASSERT==	M 0.1, FALSE
	__ASSERT==	M 0.2, FALSE
	__ASSERT==	M 0.3, FALSE
	__ASSERT==	M 0.4, FALSE
	__ASSERT==	M 0.5, FALSE
	__ASSERT==	M 0.6, TRUE
	__ASSERT==	M 0.7, FALSE
	__ASSERT==	M 1.0, FALSE
	__ASSERT==	M 1.1, TRUE
	
	
	BE
END_FUNCTION

]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST not 1"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_not_1" : VOID
BEGIN
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	TRUE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	TRUE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	TRUE
	__ASSERT==	M 0.1,	TRUE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	TRUE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	TRUE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	TRUE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	TRUE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	TRUE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN20		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN20		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN20		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	TRUE
	__ASSERT==	M 0.1,	TRUE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN20		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN20		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN20		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN20		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	
	
	L	0
	T	MD 0
	CALL "FC_not_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN20		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT10		:= M 0.0,  // BOOL
		OUT20		:= M 0.1,  // BOOL
	)
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	
	
	BE
END_FUNCTION
]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST not 2"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_not_2" : VOID
BEGIN
	L	0
	T	MD 0
	T	MD 10
	CALL "FC_not_2" (
		// VAR_INPUT
		IN01		:= 4242,  // INT
		IN02		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= 2424,  // INT
		IN12		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT00		:= MW 0,  // INT
		OUT01		:= M 2.0,  // BOOL
		OUT10		:= MW 10,  // INT
		OUT11		:= M 12.0,  // BOOL
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	M 2.0,	FALSE
	__ASSERT==	MW 10,	0
	__ASSERT==	M 12.0,	TRUE
	
	
	L	0
	T	MD 0
	T	MD 10
	CALL "FC_not_2" (
		// VAR_INPUT
		IN01		:= 4242,  // INT
		IN02		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= 2424,  // INT
		IN12		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT00		:= MW 0,  // INT
		OUT01		:= M 2.0,  // BOOL
		OUT10		:= MW 10,  // INT
		OUT11		:= M 12.0,  // BOOL
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	M 2.0,	TRUE
	__ASSERT==	MW 10,	0
	__ASSERT==	M 12.0,	TRUE
	
	
	L	0
	T	MD 0
	T	MD 10
	CALL "FC_not_2" (
		// VAR_INPUT
		IN01		:= 4242,  // INT
		IN02		:= FALSE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= 2424,  // INT
		IN12		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT00		:= MW 0,  // INT
		OUT01		:= M 2.0,  // BOOL
		OUT10		:= MW 10,  // INT
		OUT11		:= M 12.0,  // BOOL
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	M 2.0,	FALSE
	__ASSERT==	MW 10,	2424
	__ASSERT==	M 12.0,	FALSE
	
	
	L	0
	T	MD 0
	T	MD 10
	CALL "FC_not_2" (
		// VAR_INPUT
		IN01		:= 4242,  // INT
		IN02		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= 2424,  // INT
		IN12		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT00		:= MW 0,  // INT
		OUT01		:= M 2.0,  // BOOL
		OUT10		:= MW 10,  // INT
		OUT11		:= M 12.0,  // BOOL
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	M 2.0,	TRUE
	__ASSERT==	MW 10,	2424
	__ASSERT==	M 12.0,	FALSE
	
	
	L	0
	T	MD 0
	T	MD 10
	CALL "FC_not_2" (
		// VAR_INPUT
		IN01		:= 4242,  // INT
		IN02		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= 2424,  // INT
		IN12		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT00		:= MW 0,  // INT
		OUT01		:= M 2.0,  // BOOL
		OUT10		:= MW 10,  // INT
		OUT11		:= M 12.0,  // BOOL
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	M 2.0,	FALSE
	__ASSERT==	MW 10,	0
	__ASSERT==	M 12.0,	FALSE
	
	
	L	0
	T	MD 0
	T	MD 10
	CALL "FC_not_2" (
		// VAR_INPUT
		IN01		:= 4242,  // INT
		IN02		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= 2424,  // INT
		IN12		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT00		:= MW 0,  // INT
		OUT01		:= M 2.0,  // BOOL
		OUT10		:= MW 10,  // INT
		OUT11		:= M 12.0,  // BOOL
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	M 2.0,	TRUE
	__ASSERT==	MW 10,	0
	__ASSERT==	M 12.0,	FALSE
	
	
	L	0
	T	MD 0
	T	MD 10
	CALL "FC_not_2" (
		// VAR_INPUT
		IN01		:= 4242,  // INT
		IN02		:= FALSE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= 2424,  // INT
		IN12		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT00		:= MW 0,  // INT
		OUT01		:= M 2.0,  // BOOL
		OUT10		:= MW 10,  // INT
		OUT11		:= M 12.0,  // BOOL
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	M 2.0,	FALSE
	__ASSERT==	MW 10,	2424
	__ASSERT==	M 12.0,	TRUE
	
	
	L	0
	T	MD 0
	T	MD 10
	CALL "FC_not_2" (
		// VAR_INPUT
		IN01		:= 4242,  // INT
		IN02		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= 2424,  // INT
		IN12		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT00		:= MW 0,  // INT
		OUT01		:= M 2.0,  // BOOL
		OUT10		:= MW 10,  // INT
		OUT11		:= M 12.0,  // BOOL
	)
	__ASSERT==	MW 0,	4242
	__ASSERT==	M 2.0,	TRUE
	__ASSERT==	MW 10,	2424
	__ASSERT==	M 12.0,	TRUE
	
	
	BE
END_FUNCTION
]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST sr 1"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_sr_1" : VOID
BEGIN
	// Reset flip-flops
	L	0
	T	MB 10
	
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= TRUE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= TRUE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= TRUE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	TRUE
	
	
	
	
	// Reset flip-flops
	L	0
	T	MB 10
	
	
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= TRUE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	TRUE
	
	
	BE
END_FUNCTION
]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST sr 2"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_sr_2" : VOID
BEGIN
	// Fet flip-flops
	L	W#16#FF
	T	MB 10
	
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= TRUE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_1" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= TRUE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= TRUE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	
	
	// Set flip-flops
	L	W#16#FF
	T	MB 10
	
	
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= TRUE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_sr_2" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN20		:= FALSE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT20		:= M 0.2,  // BOOL
		OUT30		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	FALSE
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	BE
END_FUNCTION
]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST sr 3"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_sr_3" : VOID
BEGIN
	// Reset flip-flops
	L	0
	T	MB 10
	
	
	
	
	CALL "FC_sr_3" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	CALL "FC_sr_3" (
		// VAR_INPUT
		IN0		:= TRUE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	CALL "FC_sr_3" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= TRUE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	CALL "FC_sr_3" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= TRUE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	CALL "FC_sr_3" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= TRUE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	
	
	// Set flip-flops
	L	W#16#FF
	T	MB 10
	
	
	
	
	CALL "FC_sr_3" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	CALL "FC_sr_3" (
		// VAR_INPUT
		IN0		:= TRUE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	CALL "FC_sr_3" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= TRUE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	CALL "FC_sr_3" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= TRUE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	CALL "FC_sr_3" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= TRUE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	
	
	BE
END_FUNCTION
]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST sr 4"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_sr_4" : VOID
BEGIN
	// Reset flip-flops
	L	0
	T	MB 10
	
	
	
	
	L	0
	T	MB 0
	CALL "FC_sr_4" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT<>	M 0.0,	M 10.0
	__ASSERT<>	M 0.1,	M 10.1
	
	
	L	0
	T	MB 0
	CALL "FC_sr_4" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT<>	M 0.0,	M 10.0
	__ASSERT<>	M 0.1,	M 10.1
	
	
	L	0
	T	MB 0
	CALL "FC_sr_4" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT<>	M 0.0,	M 10.0
	__ASSERT<>	M 0.1,	M 10.1
	
	
	L	0
	T	MB 0
	CALL "FC_sr_4" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT<>	M 0.0,	M 10.0
	__ASSERT<>	M 0.1,	M 10.1
	
	
	L	0
	T	MB 0
	CALL "FC_sr_4" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT<>	M 0.0,	M 10.0
	__ASSERT<>	M 0.1,	M 10.1
	
	
	
	
	// Set flip-flops
	L	W#16#FF
	T	MB 10
	
	
	
	
	L	0
	T	MB 0
	CALL "FC_sr_4" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT<>	M 0.0,	M 10.0
	__ASSERT<>	M 0.1,	M 10.1
	
	
	L	0
	T	MB 0
	CALL "FC_sr_4" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT<>	M 0.0,	M 10.0
	__ASSERT<>	M 0.1,	M 10.1
	
	
	L	0
	T	MB 0
	CALL "FC_sr_4" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT<>	M 0.0,	M 10.0
	__ASSERT<>	M 0.1,	M 10.1
	
	
	L	0
	T	MB 0
	CALL "FC_sr_4" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= TRUE,  // BOOL
		IN11		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT<>	M 0.0,	M 10.0
	__ASSERT<>	M 0.1,	M 10.1
	
	
	L	0
	T	MB 0
	CALL "FC_sr_4" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN10		:= FALSE,  // BOOL
		IN11		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT<>	M 0.0,	M 10.0
	__ASSERT<>	M 0.1,	M 10.1
	
	
	BE
END_FUNCTION
]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST sr 5"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_sr_5" : VOID
BEGIN
	// Reset flip-flops
	L	0
	T	MB 10
	
	
	
	
	L	0
	T	MB 0
	CALL "FC_sr_5" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT1		:= M 0.1,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
	)
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 0.1,	M 10.1
	__ASSERT==	M 0.3,	M 10.2
	
	
	L	0
	T	MB 0
	CALL "FC_sr_5" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT1		:= M 0.1,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
	)
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 0.1,	M 10.1
	__ASSERT==	M 0.3,	M 10.2
	
	
	L	0
	T	MB 0
	CALL "FC_sr_5" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT1		:= M 0.1,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
	)
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 0.1,	M 10.1
	__ASSERT==	M 0.3,	M 10.2
	
	
	L	0
	T	MB 0
	CALL "FC_sr_5" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN11		:= FALSE,  // BOOL
		IN21		:= TRUE,  // BOOL
		IN30		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT1		:= M 0.1,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
	)
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 0.1,	M 10.1
	__ASSERT==	M 0.3,	M 10.2
	
	
	L	0
	T	MB 0
	CALL "FC_sr_5" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= TRUE,  // BOOL
		IN11		:= TRUE,  // BOOL
		IN21		:= FALSE,  // BOOL
		IN30		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT1		:= M 0.1,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
	)
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 0.1,	M 10.1
	__ASSERT==	M 0.3,	M 10.2
	
	
	BE
END_FUNCTION
]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST sr 6"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_sr_6" : VOID
BEGIN
	// Reset flip-flops
	L	0
	T	MB 10
	
	
	
	
	CALL "FC_sr_6" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
		INOUT4		:= M 10.4,  // BOOL
	)
	__ASSERT==	M 10.0, FALSE
	__ASSERT==	M 10.1, FALSE
	__ASSERT==	M 10.2, FALSE
	__ASSERT==	M 10.3, FALSE
	__ASSERT==	M 10.4, FALSE
	
	
	CALL "FC_sr_6" (
		// VAR_INPUT
		IN0		:= TRUE,  // BOOL
		IN2		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
		INOUT4		:= M 10.4,  // BOOL
	)
	__ASSERT==	M 10.0, TRUE
	__ASSERT==	M 10.1, FALSE
	__ASSERT==	M 10.2, FALSE
	__ASSERT==	M 10.3, FALSE
	__ASSERT==	M 10.4, FALSE
	
	
	CALL "FC_sr_6" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN2		:= TRUE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
		INOUT4		:= M 10.4,  // BOOL
	)
	__ASSERT==	M 10.0, TRUE
	__ASSERT==	M 10.1, FALSE
	__ASSERT==	M 10.2, FALSE
	__ASSERT==	M 10.3, FALSE
	__ASSERT==	M 10.4, FALSE
	
	
	CALL "FC_sr_6" (
		// VAR_INPUT
		IN0		:= TRUE,  // BOOL
		IN2		:= TRUE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
		INOUT4		:= M 10.4,  // BOOL
	)
	__ASSERT==	M 10.0, TRUE
	__ASSERT==	M 10.1, FALSE
	__ASSERT==	M 10.2, FALSE
	__ASSERT==	M 10.3, FALSE
	__ASSERT==	M 10.4, FALSE
	
	
	CALL "FC_sr_6" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
		INOUT4		:= M 10.4,  // BOOL
	)
	__ASSERT==	M 10.0, TRUE
	__ASSERT==	M 10.1, FALSE
	__ASSERT==	M 10.2, FALSE
	__ASSERT==	M 10.3, FALSE
	__ASSERT==	M 10.4, FALSE
	
	
	
	
	// Set flip-flops
	L	W#16#FF
	T	MB 10
	
	
	
	
	CALL "FC_sr_6" (
		// VAR_INPUT
		IN0		:= TRUE,  // BOOL
		IN2		:= TRUE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
		INOUT4		:= M 10.4,  // BOOL
	)
	__ASSERT==	M 10.0, TRUE
	__ASSERT==	M 10.1, FALSE
	__ASSERT==	M 10.2, TRUE
	__ASSERT==	M 10.3, TRUE
	__ASSERT==	M 10.4, FALSE
	
	
	CALL "FC_sr_6" (
		// VAR_INPUT
		IN0		:= TRUE,  // BOOL
		IN2		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
		INOUT4		:= M 10.4,  // BOOL
	)
	__ASSERT==	M 10.0, TRUE
	__ASSERT==	M 10.1, FALSE
	__ASSERT==	M 10.2, FALSE
	__ASSERT==	M 10.3, TRUE
	__ASSERT==	M 10.4, FALSE
	
	
	CALL "FC_sr_6" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN2		:= TRUE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
		INOUT4		:= M 10.4,  // BOOL
	)
	__ASSERT==	M 10.0, TRUE
	__ASSERT==	M 10.1, FALSE
	__ASSERT==	M 10.2, FALSE
	__ASSERT==	M 10.3, TRUE
	__ASSERT==	M 10.4, FALSE
	
	
	CALL "FC_sr_6" (
		// VAR_INPUT
		IN0		:= TRUE,  // BOOL
		IN2		:= TRUE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
		INOUT4		:= M 10.4,  // BOOL
	)
	__ASSERT==	M 10.0, TRUE
	__ASSERT==	M 10.1, FALSE
	__ASSERT==	M 10.2, FALSE
	__ASSERT==	M 10.3, TRUE
	__ASSERT==	M 10.4, FALSE
	
	
	CALL "FC_sr_6" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
		INOUT4		:= M 10.4,  // BOOL
	)
	__ASSERT==	M 10.0, TRUE
	__ASSERT==	M 10.1, FALSE
	__ASSERT==	M 10.2, FALSE
	__ASSERT==	M 10.3, TRUE
	__ASSERT==	M 10.4, FALSE
	
	
	BE
END_FUNCTION
]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST edge 1"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_edge_1" : VOID
BEGIN
	// Initialize edge memory
	CLR
	=	M 10.0
	=	M 10.1
	=	M 10.2
	=	M 10.3
	
	
	
	
	L	0
	T	MB 0
	CALL "FC_edge_1" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_edge_1" (
		// VAR_INPUT
		IN0		:= TRUE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	TRUE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	__ASSERT==	M 0.0,	TRUE
	__ASSERT==	M 0.1,	FALSE
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_edge_1" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= TRUE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_edge_1" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= TRUE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	FALSE
	__ASSERT==	M 10.3,	TRUE
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	TRUE
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_edge_1" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= TRUE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	FALSE
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	__ASSERT==	M 0.2,	TRUE
	__ASSERT==	M 0.3,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_edge_1" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_edge_1" (
		// VAR_INPUT
		IN0		:= FALSE,  // BOOL
		IN1		:= FALSE,  // BOOL
		IN2		:= FALSE,  // BOOL
		IN3		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT0		:= M 0.0,  // BOOL
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		OUT3		:= M 0.3,  // BOOL
		// VAR_IN_OUT
		INOUT0		:= M 10.0,  // BOOL
		INOUT1		:= M 10.1,  // BOOL
		INOUT2		:= M 10.2,  // BOOL
		INOUT3		:= M 10.3,  // BOOL
	)
	__ASSERT==	M 10.0,	FALSE
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 10.2,	TRUE
	__ASSERT==	M 10.3,	TRUE
	__ASSERT==	M 0.0,	FALSE
	__ASSERT==	M 0.1,	FALSE
	__ASSERT==	M 0.2,	FALSE
	__ASSERT==	M 0.3,	TRUE
	
	
	BE
END_FUNCTION
]]></source>

		<!-- AWL/STL source code -->
		<source enabled="1"
		        name="TEST edge 2"
		        type="0"><![CDATA[
FUNCTION "FC_TEST_edge_2" : VOID
BEGIN
	// Initialize edge memory
	L	0
	T	MB 10
	
	
	
	
	L	0
	T	MB 0
	CALL "FC_edge_2" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		// VAR_IN_OUT
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 0.1,	FALSE
	__ASSERT==	M 0.2,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_edge_2" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		// VAR_IN_OUT
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 0.1,	FALSE
	__ASSERT==	M 0.2,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_edge_2" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		// VAR_IN_OUT
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 0.1,	TRUE
	__ASSERT==	M 0.2,	TRUE
	
	
	L	0
	T	MB 0
	CALL "FC_edge_2" (
		// VAR_INPUT
		IN00		:= TRUE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		// VAR_IN_OUT
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.1,	TRUE
	__ASSERT==	M 0.1,	FALSE
	__ASSERT==	M 0.2,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_edge_2" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		// VAR_IN_OUT
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 0.1,	FALSE
	__ASSERT==	M 0.2,	FALSE
	
	
	L	0
	T	MB 0
	CALL "FC_edge_2" (
		// VAR_INPUT
		IN00		:= FALSE,  // BOOL
		IN01		:= FALSE,  // BOOL
		IN21		:= FALSE,  // BOOL
		// VAR_OUTPUT
		OUT1		:= M 0.1,  // BOOL
		OUT2		:= M 0.2,  // BOOL
		// VAR_IN_OUT
		INOUT1		:= M 10.1,  // BOOL
	)
	__ASSERT==	M 10.1,	FALSE
	__ASSERT==	M 0.1,	FALSE
	__ASSERT==	M 0.2,	FALSE
	
	
	BE
END_FUNCTION
]]></source>
	</language_awl>

	<!-- FUP/FBD language configuration -->
	<language_fup>
		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="assign"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_assign"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN0" type="BOOL" uuid="8fde47bb-6fe6-4a12-94c5-62b823665e97" />
			<field name="IN1" type="BOOL" uuid="6c604aa8-36eb-47cc-bb06-dd895e1c4d74" />
		</inputs>
		<outputs>
			<field name="OUT0" type="BOOL" uuid="a65ea372-1ac5-4238-87b6-4d403db0aac3" />
			<field name="OUT1" type="BOOL" uuid="6b7ab060-e697-456d-a94a-7534d7ec4fb7" />
			<field name="OUT2" type="BOOL" uuid="98b688ec-0d56-4eb6-802c-0673a534bb21" />
		</outputs>
		<retval>
			<field name="RET_VAL" type="void" uuid="ebf7e09c-e2ea-49e6-af50-aff43cc3b5c0" />
		</retval>
	</interface>
	<grids>
		<grid height="18" uuid="96b01852-cd49-401c-b90a-9e7a6540247b" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="45cd7276-5c1b-4dff-b20c-cd97be2acc0a" />
				<wire id="1" uuid="a0b38838-6e30-4b3a-a9eb-255441df626a" />
				<wire id="2" uuid="28dda626-d6af-4783-853f-c6e2c9b02b66" />
			</wires>
			<elements>
				<element subtype="and" type="boolean" uuid="8ca155e9-2b8c-4f19-8b94-a032f1559fe8" x="2" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="4d375e0e-5978-4658-80d5-47e16a95a65d" wire="1" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="63079447-b7da-47ad-ac9f-5a8e07b1ff9d" wire="2" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="44bb7fc7-30b7-4a3d-8050-514bc0269e3d" wire="0" />
					</connections>
				</element>
				<element content="#OUT0" subtype="assign" type="operand" uuid="4d571161-8383-453e-9500-1476019441b8" x="3" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="8f2411e3-5c5d-4c6d-8211-ed5ffc73205e" wire="0" />
					</connections>
				</element>
				<element content="#OUT1" subtype="assign" type="operand" uuid="9f56084c-8002-4004-b6b3-51d851fb2ae1" x="3" y="4">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="c7b1bf2c-11d2-4e38-ae58-ce0df0f488d5" wire="0" />
					</connections>
				</element>
				<element content="#OUT2" subtype="assign" type="operand" uuid="a6a8c0ca-0b08-4af3-a56b-0157d7c03914" x="3" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="c5441c28-0128-49eb-9b7c-a6b425e459e2" wire="0" />
					</connections>
				</element>
				<element content="#IN0" subtype="load" type="operand" uuid="edc46fa2-342f-4543-8984-0ee9a1f218b0" x="1" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="7ca5949d-5534-4d7f-a071-00a0c92da7e6" wire="1" />
					</connections>
				</element>
				<element content="#IN1" subtype="load" type="operand" uuid="6d534ede-6b2b-4533-ae46-585694de617c" x="1" y="3">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="866729ad-2cca-4979-bbd7-6b4d9d054288" wire="2" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="and_and_or"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_and_and_or"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="INP0" type="bool" uuid="c1899713-588c-4869-8856-c952985c424a" />
			<field name="INP1" type="bool" uuid="07d8b3d3-f819-4ce7-8bd3-814abfa210c2" />
			<field name="INP2" type="bool" uuid="1e34b8f3-cdb3-4d87-b97d-898c46fa5a9e" />
			<field name="INP3" type="bool" uuid="20730ef0-1e51-4b5f-ad86-118cf3dfb3c1" />
		</inputs>
		<retval>
			<field name="RET_VAL" type="bool" uuid="d5f1b30e-fff4-41f3-a6fb-5560b1696927" />
		</retval>
	</interface>
	<grids>
		<grid height="32" uuid="ff2e859b-2721-4ecb-9d39-aba553056dda" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="ab0399b0-2369-48a9-8892-ad405b1c2603" />
				<wire id="1" uuid="6fc63581-06d2-4ef2-92b7-5157c913911c" />
				<wire id="2" uuid="205fa115-fccb-4a89-b55c-9c47afd7ed42" />
				<wire id="3" uuid="22c2ae16-a99b-41c2-869e-ee252f4c05d1" />
				<wire id="4" uuid="35e4ea6f-1a7e-441b-8315-7f1caaebbddc" />
				<wire id="5" uuid="a8794488-916b-429a-a276-61003d9f76a3" />
				<wire id="6" uuid="170fd159-ccf5-4988-be8c-6d60f819f24d" />
			</wires>
			<elements>
				<element subtype="and" type="boolean" uuid="bc7a17c9-1145-471c-82bc-319ef2629940" x="2" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="9ae0b3b5-ab7e-44a1-ab8a-1ae859f26ac9" wire="0" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="ad295840-85b5-4d3e-b3d4-dac81d976839" wire="1" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="cdadd64f-49c6-421d-be1e-924f96aacf6a" wire="5" />
					</connections>
				</element>
				<element content="#INP0" subtype="load" type="operand" uuid="8918ad71-9a9c-4402-b8ec-e49ade11b908" x="1" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="aeaab7c4-6bc3-4039-af3a-3a53c7f49746" wire="0" />
					</connections>
				</element>
				<element content="#INP1" subtype="load" type="operand" uuid="0fae9869-74b6-4a83-8757-8f61c44c6879" x="1" y="3">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="bfdc9aef-8825-4c10-895f-d63cb75e7d9f" wire="1" />
					</connections>
				</element>
				<element content="#RET_VAL" subtype="assign" type="operand" uuid="ce9626dd-f60a-451c-97e9-1cb891b21fe7" x="4" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="35a53bbd-8d90-4f07-bb5d-84c7064678b1" wire="4" />
					</connections>
				</element>
				<element subtype="or" type="boolean" uuid="f6084153-cacd-49e9-ba5c-d41eb5982062" x="3" y="4">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="e1cdcf3c-3f7c-4429-a8e3-032f350a820c" wire="5" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="7a62c9a1-81d3-4b16-bcf8-18c5a105d6ec" wire="6" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="21e14d8c-4a51-4717-b59d-784db42fd291" wire="4" />
					</connections>
				</element>
				<element subtype="and" type="boolean" uuid="d307d286-b411-4fac-a196-5a4a653e41eb" x="2" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="418bcb5d-3e55-4618-bd6d-58e4b455a58d" wire="2" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="b5f0c05b-6997-456e-ae75-152fd6d9e87c" wire="3" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="668fb99b-4744-4ef8-a5f9-0a93b23c0e52" wire="6" />
					</connections>
				</element>
				<element content="#INP2" subtype="load" type="operand" uuid="68b1c8a3-6fac-49e0-960c-1e9107471ee8" x="1" y="5">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="7e11d756-4a0e-43b1-8ff0-69d961df5d11" wire="2" />
					</connections>
				</element>
				<element content="#INP3" subtype="load" type="operand" uuid="b4336ab4-7818-4746-9f7f-3a85574c5403" x="1" y="6">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="b05569d6-47c3-4301-bbf5-8240686bfd5b" wire="3" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="branch"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_branch"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN00" type="BOOL" uuid="3756b311-6334-449f-8134-e96d63a017f5" />
			<field name="IN01" type="BOOL" uuid="3ac361fb-3fab-4904-a2c3-9bd9b0caaea7" />
			<field name="IN10" type="BOOL" uuid="78430451-35e2-4257-8ace-02a1a6d00f89" />
			<field name="IN20" type="BOOL" uuid="695e22de-7b2a-47bd-b1cc-d05ba13b1e9a" />
			<field name="IN30" type="BOOL" uuid="ea03c23c-3a76-4d2a-a53d-da858490ecec" />
			<field name="IN40" type="BOOL" uuid="255f1d87-43ef-487b-8258-aecd1b3cadde" />
			<field name="IN50" type="BOOL" uuid="1c49a0b1-667d-4828-b51a-4a59f4cadd7b" />
			<field name="IN60" type="BOOL" uuid="b7d69e76-105a-4679-a4ed-51449c2aaaee" />
			<field name="IN61" type="BOOL" uuid="5e856226-19bf-4fce-89f0-6a61f5464d79" />
			<field name="IN70" type="BOOL" uuid="e9322e2c-8ebf-4fbc-8cd9-e595bc0b5a65" />
			<field name="IN80" type="BOOL" uuid="f6f3b91b-8af7-4274-bd3b-5537541eece5" />
			<field name="IN81" type="BOOL" uuid="0d3c16b9-a762-4d66-98b3-00a4424caa02" />
			<field name="IN90" type="BOOL" uuid="278fa8c7-2636-4eaa-a8bd-2826d902b6fc" />
		</inputs>
		<outputs>
			<field name="OUT10" type="BOOL" uuid="e312aa2e-4056-4f7b-bb46-d0e2f21cd97d" />
			<field name="OUT20" type="BOOL" uuid="54c722ea-335a-4cd9-b290-2b7fbff7bcbe" />
			<field name="OUT40" type="BOOL" uuid="d3fdd2c2-7a7b-4306-ac42-4334c0b6dec8" />
			<field name="OUT50" type="BOOL" uuid="4e971171-40a7-4460-91b7-6f8a0bdb847f" />
			<field name="OUT60" type="BOOL" uuid="1c9be6eb-c373-412f-9a94-d8f3eaf917a8" />
			<field name="OUT61" type="BOOL" uuid="3e1f3845-b5fb-4fa4-867c-91ca080d45a7" />
			<field name="OUT70" type="BOOL" uuid="c9c5095d-8c26-41fa-ba72-b0e5c926ea2d" />
			<field name="OUT80" type="BOOL" uuid="979e3db4-1bc7-471e-b4db-0e160ba05074" />
			<field name="OUT81" type="BOOL" uuid="1fdc8fd2-979b-4c7a-9e8e-baa9cad8b761" />
			<field name="OUT90" type="BOOL" uuid="e330fcb3-dfb3-4e53-a8d0-e08d00255634" />
		</outputs>
		<temps>
			<field name="temp_A" type="BOOL" uuid="d0fc59a1-d2e4-491d-a68f-b0b51ca078d9" />
			<field name="temp_B" type="INT" uuid="b2ae1e5a-3344-41a3-8c56-194b3be4c036" />
		</temps>
		<retval>
			<field name="RET_VAL" type="void" uuid="175ddcc3-a046-4969-a23c-b313e90b3647" />
		</retval>
	</interface>
	<grids>
		<grid height="33" uuid="9a469173-1c69-414e-bd91-9ff80a8a3776" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="f418df76-b21c-4e0c-bb1b-8dac20e84ea2" />
				<wire id="1" uuid="52046f22-5c58-4773-8360-be0f083a9b85" />
				<wire id="2" uuid="ed1b0a5a-b565-4c78-9b62-0761c853f286" />
				<wire id="3" uuid="4a0fc7e0-3de0-4908-882d-af27ec4086f6" />
				<wire id="4" uuid="c7e56034-e6e9-4147-b416-a57c29f2b556" />
				<wire id="5" uuid="2b8e4827-0d91-418a-a0fc-a4bc2f71a107" />
				<wire id="6" uuid="2cc81632-2c8d-4893-8a02-b91be99ed600" />
				<wire id="7" uuid="4bf1c9a3-7464-4c45-ba97-80399f26faeb" />
				<wire id="8" uuid="9ec30ba8-7591-42a2-b1e9-90549ef29c0e" />
				<wire id="9" uuid="10e4551d-22e1-4950-baba-770ae252e569" />
				<wire id="10" uuid="4da5a894-145e-44af-8bdc-0f6eebcd6709" />
				<wire id="11" uuid="6c7c2c24-42b6-4fa7-864a-cfbbe65179f0" />
				<wire id="12" uuid="a7f285a5-b4ce-4c4d-980f-0c02fdfc9066" />
				<wire id="13" uuid="ad7a3120-a5b4-46e0-aecd-82d1ccbb65bf" />
				<wire id="14" uuid="810c4ed5-0d09-4903-b439-b6744ab0817f" />
				<wire id="15" uuid="5918220f-0e2f-4e4a-96ee-d4976f3bca96" />
				<wire id="16" uuid="d3e33925-33c6-48bd-9b77-ee1d562f226d" />
				<wire id="17" uuid="ab1baf89-b76d-4b11-83b0-24d64694497d" />
				<wire id="18" uuid="9e376427-7ac1-418a-8c44-dc970a7f346f" />
				<wire id="19" uuid="d6c23bd7-a792-4c7e-aa36-c2cc80003296" />
				<wire id="20" uuid="c214075c-177f-4fc0-ba58-8eb2bab31386" />
				<wire id="21" uuid="34feb45c-166d-4292-b4bc-12a079c9e4cb" />
			</wires>
			<elements>
				<element subtype="xor" type="boolean" uuid="6a547bbf-2269-4505-96a8-b5400d8a7b24" x="2" y="1">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="05e7358d-1dda-4a65-8139-587072f79f51" wire="1" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="7c0c5132-0ade-488b-b9e7-a56fb0557b1a" wire="2" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="381adf1c-eb1d-4f51-a0de-4dad71f18efb" wire="0" />
					</connections>
				</element>
				<element subtype="and" type="boolean" uuid="e5bdbec5-2bfa-4d6e-9a4f-36728131f9ec" x="4" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="c263c931-d4a6-4491-ba3e-d46846631799" wire="0" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="85183f80-dfef-40d5-aeee-96e97367c9d4" wire="3" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="976ef169-7135-4d6f-baae-474a1ddd908f" wire="5" />
					</connections>
				</element>
				<element subtype="and" type="boolean" uuid="9b8b41d9-53cb-4c8d-97e9-4b5f7fad826d" x="4" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="ebc74d20-68b6-4bba-a1a9-9b6c9d531c92" wire="0" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="905ac73e-bdd1-4964-9459-de6a67764442" wire="4" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="68a5d543-8634-4426-a95a-2a038254b9aa" wire="6" />
					</connections>
				</element>
				<element content="#IN00" subtype="load" type="operand" uuid="f30b8ce2-007b-43f0-8a71-24164555c6e4" x="1" y="1">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="2854458c-643c-40f7-ac50-31d88c0a387b" wire="1" />
					</connections>
				</element>
				<element content="#IN01" subtype="load" type="operand" uuid="eb6a412c-c363-4fed-895a-578214d0e9e4" x="1" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="4a363beb-f640-45c5-977e-f0eea78010f7" wire="2" />
					</connections>
				</element>
				<element content="#IN10" subtype="load" type="operand" uuid="6fe758d0-9d90-4716-bcaa-0016bf769503" x="3" y="3">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="928b05b1-8c35-4e39-9a2d-2f420ee7417b" wire="3" />
					</connections>
				</element>
				<element content="#IN20" subtype="load" type="operand" uuid="b4625702-1b71-486d-9906-956dcb3f9c20" x="3" y="6">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="557a8532-457b-46aa-a999-145644620d07" wire="4" />
					</connections>
				</element>
				<element content="#OUT10" subtype="assign" type="operand" uuid="04419a1f-e530-4a49-9882-9d1d07e6a358" x="5" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="7cfa0bec-07da-4037-a21a-0556c79dee68" wire="5" />
					</connections>
				</element>
				<element content="#OUT20" subtype="assign" type="operand" uuid="86b99179-1d7b-4f6f-82ef-9f594278b48f" x="5" y="6">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="31f0f3ca-56e7-44f0-a59d-46a9c8fc2498" wire="6" />
					</connections>
				</element>
				<element subtype="and" type="boolean" uuid="dc1e494c-8598-4318-bd02-02eb4a628e80" x="4" y="9">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="852ee51d-6c89-4185-8110-c7abcba4f92a" wire="7" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="7ea65e0e-5d5e-4aaf-8cb3-2bb3b2e943a8" wire="8" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="d2939ae5-d781-490f-9c9c-8223d13633e5" wire="10" />
					</connections>
				</element>
				<element content="#IN30" subtype="load" type="operand" uuid="36d306ac-03be-4952-acf2-b5d039436d69" x="1" y="9">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="6211fd7c-3eca-4f51-81f6-ed84d5318832" wire="7" />
					</connections>
				</element>
				<element subtype="and" type="boolean" uuid="7cfb6da8-6021-4004-b073-c080597ad269" x="4" y="12">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="e1227b95-62b5-48f3-a31d-88a536c93aba" wire="7" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="c8afb5aa-5b96-446c-907a-76dc32bb0e0e" wire="9" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="9774ceea-3a99-40cd-a646-02bf879068f3" wire="11" />
					</connections>
				</element>
				<element content="#IN40" subtype="load" type="operand" uuid="fc4f35fa-f006-4a72-ab5a-3c88da2398f5" x="3" y="10">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="b78d0952-1c64-47bf-b089-bca76f71952e" wire="8" />
					</connections>
				</element>
				<element content="#IN50" subtype="load" type="operand" uuid="b83e84d3-d9c7-4f30-b21e-7ee9c52eb400" x="3" y="13">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="31151782-da03-4916-bb6f-2a27d5975544" wire="9" />
					</connections>
				</element>
				<element content="#OUT40" subtype="assign" type="operand" uuid="5abfa298-daeb-4290-9105-5c34def22c52" x="5" y="10">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="d92cddf2-8ae9-4e02-bd94-ffd70fe266b4" wire="10" />
					</connections>
				</element>
				<element content="#OUT50" subtype="assign" type="operand" uuid="3aef9503-3189-4754-af45-63309d201a9a" x="5" y="13">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="8eebe381-18a2-44e1-ad7f-320ffefc1d1a" wire="11" />
					</connections>
				</element>
				<element content="#OUT60" subtype="assign" type="operand" uuid="fdf751d6-2a79-43bd-b0e8-6ecaf9ba60ea" x="3" y="17">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="61764cae-6d62-4717-9309-d87b4cf14401" wire="12" />
					</connections>
				</element>
				<element content="#IN60" subtype="load" type="operand" uuid="e924f31b-a846-4ce1-9451-d5c52edc0132" x="1" y="16">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="c0ea733f-5ea4-4657-a906-4c58362e5cf0" wire="13" />
					</connections>
				</element>
				<element content="#IN61" subtype="load" type="operand" uuid="998bd3ce-b617-4547-8d5b-082164bcaca4" x="1" y="17">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="03b6692c-f981-4c2a-a22b-0be1f808601d" wire="14" />
					</connections>
				</element>
				<element content="#IN70" subtype="load" type="operand" uuid="335e802c-d267-4d56-a01c-b8dbe44d7ff2" x="3" y="21">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="c193bcbb-7ccf-416b-bd21-c18f71905268" wire="15" />
					</connections>
				</element>
				<element content="#OUT70" subtype="assign" type="operand" uuid="d85b19d9-3f1d-47b6-a341-9c2452255d8f" x="5" y="21">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="07ffe793-fe55-43b8-a6a3-d95dbd912d69" wire="16" />
					</connections>
				</element>
				<element content="#IN80" subtype="load" type="operand" uuid="8e3d3550-faab-40fc-9954-06b8296507a3" x="1" y="23">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="8ba12d1a-3d29-40ff-846b-be384344fa9d" wire="17" />
					</connections>
				</element>
				<element content="#IN81" subtype="load" type="operand" uuid="a280d649-7e9b-4a71-842b-dbfbd3ccf308" x="1" y="24">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="24c6addd-47ef-4c55-9938-edd1d28fd578" wire="18" />
					</connections>
				</element>
				<element content="#OUT80" subtype="assign" type="operand" uuid="4acdb146-d16d-4844-8f7e-6da43847d8cf" x="3" y="27">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="1d55fc0a-5b43-4355-a592-9cc59d4acd6c" wire="21" />
					</connections>
				</element>
				<element content="#IN90" subtype="load" type="operand" uuid="7603f5d1-8bc0-4cb8-8dca-efffb690c6d3" x="3" y="25">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="a4a1c970-0f8b-4596-8498-6322df696e2d" wire="19" />
					</connections>
				</element>
				<element content="#OUT90" subtype="assign" type="operand" uuid="0842e040-8960-46cb-bf26-6c3ade7c94f4" x="5" y="25">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="2b6bf07c-17e8-4626-bf8a-85804c90f048" wire="20" />
					</connections>
				</element>
				<element content="#OUT61" subtype="assign" type="operand" uuid="207a9c88-bf0d-45c6-b9e6-98bc98b9277f" x="3" y="18">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="f4eb4cb1-d88e-4d7c-ac46-4154219ee0ef" wire="12" />
					</connections>
				</element>
				<element content="#OUT81" subtype="assign" type="operand" uuid="f7e4f202-a998-4d29-9bec-f5819165d389" x="3" y="28">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="87f6a577-1130-4aaf-9499-a10a64010b1e" wire="21" />
					</connections>
				</element>
				<element subtype="xor" type="boolean" uuid="b322dc12-af12-4122-82ed-5bb484758dec" x="2" y="16">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="94db3cb2-18d5-4585-9de8-ff641919f28d" wire="13" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="92245fa0-de88-4787-b2ed-05ec2fea0dd0" wire="14" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="7bd41c68-280e-402b-83ae-23daa9c4c890" wire="12" />
					</connections>
				</element>
				<element subtype="xor" type="boolean" uuid="b6559129-8ad2-497c-be30-0c63c547e3ac" x="4" y="20">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="2d10531a-9f1c-4484-8263-c09c71c15664" wire="12" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="3c7faac2-6dec-46b0-84fd-5e63499fe67d" wire="15" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="4aa9108f-6464-4e1e-83b6-7103a5ae025a" wire="16" />
					</connections>
				</element>
				<element subtype="xor" type="boolean" uuid="37bd15e5-cac8-46cc-93f2-804b17eaca6e" x="2" y="23">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="2df92614-f3d4-47ec-a171-88125e9bf5bc" wire="17" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="a4a16dc8-6cd4-472b-981a-131b19557ceb" wire="18" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="8df0203c-98f7-48de-b091-ddb235758317" wire="21" />
					</connections>
				</element>
				<element subtype="xor" type="boolean" uuid="195ab4a9-02d7-42ad-b99f-629b1b1fb3fb" x="4" y="24">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="bd636288-8d2a-4a3c-b7d1-6c96edb9c73d" wire="21" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="ea43c4bf-0124-460f-bac4-99274e55828d" wire="19" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="472064fa-cc11-4b47-8be5-9bb542a591df" wire="20" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="not 1"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_not_1"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN00" type="BOOL" uuid="2501290f-1bec-4193-aaed-1895f65f9f75" />
			<field name="IN01" type="BOOL" uuid="7c021a2f-3f1a-4091-90c1-1f391a0f964b" />
			<field name="IN10" type="BOOL" uuid="cb154a31-e6ac-48a6-b95e-69af3900d2bf" />
			<field name="IN20" type="BOOL" uuid="b4096b04-05b7-46c0-a68a-8b694bdf6f72" />
		</inputs>
		<outputs>
			<field name="OUT10" type="BOOL" uuid="c7e00761-6252-471a-93e1-624c2c0cbbd5" />
			<field name="OUT20" type="BOOL" uuid="57eb73e9-bb6d-4bf4-a8b5-ccec857e797e" />
		</outputs>
		<retval>
			<field name="RET_VAL" type="VOID" uuid="b3775a65-c96d-426f-b6ba-7384b93e5b98" />
		</retval>
	</interface>
	<grids>
		<grid height="18" uuid="8ed89c83-0803-4b66-93f5-5af183f46f35" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="fb185e33-605a-46a1-9dd9-be0067901d22" />
				<wire id="1" uuid="4e7f8d6f-fcef-4440-8cf1-0acf8109856e" />
				<wire id="2" uuid="09e2ffc0-5cf9-465a-aa5f-c1326e651bab" />
				<wire id="3" uuid="13aacbb6-f0ff-4afc-95e6-4d22eb47f21a" />
				<wire id="4" uuid="d9a074da-7a1b-4a14-90e5-5e12b1015478" />
				<wire id="5" uuid="8e17f79e-a60e-40e7-8d1a-264fa1364ca0" />
				<wire id="6" uuid="76b91c18-9443-4954-bf5a-6cbb74844011" />
			</wires>
			<elements>
				<element subtype="and" type="boolean" uuid="1a4780dc-d71b-473f-81ee-9360eb5638b8" x="2" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" uuid="32df9d55-9c5c-4c1f-b9c1-a1dda930f2a9" wire="1" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="cf6da197-94df-470e-991c-c5fa3f359b9b" wire="5" />
						<connection dir_in="0" dir_out="1" inverted="1" pos="0" uuid="d1aa9c51-83c7-4d8c-82f3-a40933bdc70c" wire="0" />
					</connections>
				</element>
				<element subtype="or" type="boolean" uuid="1461a5ee-8724-4787-9fb2-513c4ede6f5d" x="4" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="194cbb5c-aa2b-49ed-8785-ba24a6812961" wire="4" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="d7cd65b8-347e-492d-9aad-243b26420843" wire="0" />
						<connection dir_in="0" dir_out="1" inverted="1" pos="0" uuid="d2224081-be29-4ad0-ab78-0f1b4a0f3508" wire="2" />
					</connections>
				</element>
				<element subtype="and" type="boolean" uuid="d281854a-86b4-4aeb-ba68-471d12d40169" x="5" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" uuid="28a26c4d-1121-41fb-8261-9921119651ae" wire="2" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="b0ed29c5-5f48-46bd-a909-dccb85fb4817" wire="6" />
						<connection dir_in="0" dir_out="1" inverted="1" pos="0" uuid="60127a5e-e295-4688-ac83-00bd8705b18a" wire="3" />
					</connections>
				</element>
				<element content="#IN00" subtype="load" type="operand" uuid="28165f41-6364-4639-a4ed-d16a42b89ca8" x="1" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="699cecc0-f0cc-4989-a8ef-edaf518672b1" wire="1" />
					</connections>
				</element>
				<element content="#OUT10" subtype="assign" type="operand" uuid="82dbdce5-2cd7-49ff-b4ef-96d6a1e30d34" x="5" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="cdaa1b1b-c497-4343-923a-99835e456d8e" wire="2" />
					</connections>
				</element>
				<element content="#OUT20" subtype="assign" type="operand" uuid="d8fc2a7b-80c8-4b10-bc91-880b56b29e88" x="6" y="6">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="e9565253-9513-40cc-8832-adc005a2dec5" wire="3" />
					</connections>
				</element>
				<element content="#IN10" subtype="load" type="operand" uuid="9c109df5-8c54-4ef6-9cf8-c5ee8c9aca89" x="3" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="c97f91fb-7e86-43af-8fe4-1be3c648934e" wire="4" />
					</connections>
				</element>
				<element content="#IN01" subtype="load" type="operand" uuid="5ca0aa04-15a7-4bef-8282-8bcce73bfd7c" x="1" y="3">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="757425c1-f5f6-4e9d-8de6-1a238cea02c8" wire="5" />
					</connections>
				</element>
				<element content="#IN20" subtype="load" type="operand" uuid="98bd636f-d7a0-40e0-96d1-8c6a4c43cea2" x="4" y="6">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="44f41ef6-4669-415e-b941-fc674277b0a1" wire="6" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="not 2"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_not_2"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN01" type="INT" uuid="06bcb958-f46b-4caa-ad48-f70016da28ae" />
			<field name="IN02" type="BOOL" uuid="b9e8122b-c10a-4073-b1d9-6a63798fecd1" />
			<field name="IN10" type="BOOL" uuid="d74f6dfe-13bd-4664-84a8-bedfbf3f5cec" />
			<field name="IN11" type="INT" uuid="c8a77108-ddf4-4887-a0d7-67ff7bc4a970" />
			<field name="IN12" type="BOOL" uuid="011b99f8-08a8-4444-9717-70c03c23b87c" />
		</inputs>
		<outputs>
			<field name="OUT00" type="INT" uuid="f2f91313-3a27-4e94-8c75-6251f67bed6b" />
			<field name="OUT01" type="BOOL" uuid="909f5492-41bd-4d1c-9b2e-f43a7969d1c6" />
			<field name="OUT10" type="INT" uuid="2e41a592-75c0-427e-a6a8-a81f2550e030" />
			<field name="OUT11" type="BOOL" uuid="ed6dc3eb-f489-4ceb-b852-2f2396d8d0b7" />
		</outputs>
		<retval>
			<field name="RET_VAL" type="VOID" uuid="286c0f3b-e150-4fa7-ab3d-b2e854aa8a7b" />
		</retval>
	</interface>
	<grids>
		<grid height="18" uuid="c7fed6e4-af06-48f2-8773-317ecdbda798" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="4797edb2-a19f-44e1-bd45-bd7d0e08ad98" />
				<wire id="1" uuid="e1cfeef7-f099-4acf-aa64-da8fbf472fae" />
				<wire id="2" uuid="613956e4-037c-47fc-b0ab-10f458372daa" />
				<wire id="3" uuid="08fa9bf1-fe87-420b-adeb-32f43bbb6acc" />
				<wire id="4" uuid="d2146c4e-e09e-4abb-b177-6acbf7661de6" />
				<wire id="5" uuid="b28f0e41-1c97-466f-ac05-2577f80e23a0" />
				<wire id="6" uuid="6512bc51-9a4d-4da3-84e1-84a6c3e24484" />
				<wire id="7" uuid="ef4f3081-a854-4d7e-8ca9-1a338d96f66f" />
				<wire id="8" uuid="327ae9ab-864d-4581-b9c6-3ea93e345b67" />
				<wire id="9" uuid="db77b48e-f05b-465e-bcca-fb99f8b1f7aa" />
				<wire id="10" uuid="644b7318-cdf8-42ac-9f57-1d948dd28b45" />
			</wires>
			<elements>
				<element type="move" uuid="3b57f8b7-c4d7-4389-b36b-b6663f26f1ff" x="2" y="1">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" uuid="52c72098-5426-4587-aeab-3761bfbdfdf7" wire="-1" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" uuid="b5001e71-4528-4053-b055-15c23bbab62f" wire="3" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" uuid="2eecbdd9-7daf-4cd9-b5be-b09d90136b2f" wire="5" />
						<connection dir_in="0" dir_out="1" pos="1" text="ENO" uuid="18ccff7c-6d95-4dee-8f46-856905253b25" wire="0" />
					</connections>
				</element>
				<element subtype="xor" type="boolean" uuid="81dacae2-a1ff-46ac-bb22-b505dd9204fc" x="3" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" uuid="aef65c1f-ddf5-43df-927c-f6bcce92e180" wire="0" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="f5fa2b08-2e5d-4650-8e2a-f3bd3142fd0d" wire="6" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="6508951c-1b75-4ea5-8686-9593b05ba8f5" wire="7" />
					</connections>
				</element>
				<element type="move" uuid="9677d050-0e12-4ff6-86d9-ee3a165474aa" x="2" y="6">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="EN" uuid="918c5676-bbcb-41bc-8edc-03342b3e1a41" wire="2" />
						<connection dir_in="1" dir_out="0" pos="1" text="IN" uuid="4a4dd115-a701-4a71-af74-cb1061cd58d9" wire="4" />
						<connection dir_in="0" dir_out="1" pos="0" text="OUT0" uuid="74672e51-d915-4160-85f6-978090f0f705" wire="9" />
						<connection dir_in="0" dir_out="1" pos="1" text="ENO" uuid="d0a2dfa1-5eb9-405f-a37b-9489fe84c2fd" wire="1" />
					</connections>
				</element>
				<element subtype="xor" type="boolean" uuid="36c75eba-7136-4b4c-99aa-fca74cf129bd" x="3" y="8">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" uuid="6a09139e-d3c2-4e5f-8dc1-432c1d4b3823" wire="1" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="4a2cb4dc-3984-46e0-8073-e7c0707138fd" wire="8" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="f5488627-515b-41d5-b49e-803925ded134" wire="10" />
					</connections>
				</element>
				<element content="#IN10" subtype="load" type="operand" uuid="90422630-90f7-405b-88a3-604adfea8139" x="1" y="7">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="981c88c5-3267-4a9b-83d0-852ab1590fe8" wire="2" />
					</connections>
				</element>
				<element content="#IN01" subtype="load" type="operand" uuid="5878e9f8-f082-4714-b7de-0a4dd2564c75" x="1" y="3">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="c22fbf95-e623-4446-8da9-c6448d1a2acf" wire="3" />
					</connections>
				</element>
				<element content="#IN11" subtype="load" type="operand" uuid="06760f06-a776-434c-be1e-f06cf1a15661" x="1" y="8">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="f95147b5-5154-4018-95b2-95d2141aae84" wire="4" />
					</connections>
				</element>
				<element content="#OUT00" subtype="assign" type="operand" uuid="59188b75-edf4-4736-8a38-0e131256f2b6" x="3" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="e5ba719a-4a80-4c9b-b791-9963cbc483a3" wire="5" />
					</connections>
				</element>
				<element content="#IN02" subtype="load" type="operand" uuid="b1cf3f15-025b-41ae-8518-54dbd070f89e" x="2" y="4">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="89b8c701-0446-4c71-a635-d8e8e1182936" wire="6" />
					</connections>
				</element>
				<element content="#OUT01" subtype="assign" type="operand" uuid="512ae166-1117-4724-a124-075d376bf9cd" x="4" y="4">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="af6b86a3-cad5-475e-aabe-d5d01f258ca3" wire="7" />
					</connections>
				</element>
				<element content="#IN12" subtype="load" type="operand" uuid="0151cc2e-1951-4f22-afc6-30022a9216ab" x="2" y="9">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="6f9b667d-2b84-44f5-92fb-51dfe32a0b5d" wire="8" />
					</connections>
				</element>
				<element content="#OUT10" subtype="assign" type="operand" uuid="0d6cf523-b89d-4b2d-ad2f-507a01399995" x="3" y="7">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="3b4730d8-9569-4fe0-acf5-34c3f7138455" wire="9" />
					</connections>
				</element>
				<element content="#OUT11" subtype="assign" type="operand" uuid="81155135-136f-4d0a-be72-0cfdb6751fe2" x="4" y="9">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="422138f8-1ab5-49fb-92f7-28c6e95bb885" wire="10" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="sr 1"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_sr_1"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN00" type="BOOL" uuid="c0379ccf-d91f-47b1-af20-e99488e1a3b8" />
			<field name="IN10" type="BOOL" uuid="871eeba8-0f6a-4afd-baa9-e800ddd0d6ba" />
			<field name="IN11" type="BOOL" uuid="0511091e-124d-412a-99fc-dd5611e571b4" />
			<field name="IN20" type="BOOL" uuid="530003af-2760-4aab-9ef7-e016e44c1be7" />
			<field name="IN21" type="BOOL" uuid="1967278b-719e-43e4-af6e-6aafb4895acd" />
			<field name="IN30" type="BOOL" uuid="471cbaa7-c188-4ac6-876e-e0d56a31262d" />
		</inputs>
		<outputs>
			<field name="OUT20" type="BOOL" uuid="572b5ff6-35f2-435c-8c95-e98d08d31f2b" />
			<field name="OUT30" type="BOOL" uuid="e22f362d-a182-49d2-acd7-db3e23d96496" />
		</outputs>
		<inouts>
			<field name="INOUT0" type="BOOL" uuid="28af7fa5-c13e-437c-a8ba-6b7301ef9988" />
			<field name="INOUT1" type="BOOL" uuid="344cca2e-3101-49e1-9d09-c91d3d0e8903" />
			<field name="INOUT2" type="BOOL" uuid="7841431d-0177-4eb9-9071-fc8c10e99d85" />
			<field name="INOUT3" type="BOOL" uuid="0d47722d-48c9-413c-aef5-a73e5fa58f2c" />
		</inouts>
		<retval>
			<field name="RET_VAL" type="VOID" uuid="b59fbdd4-9c7d-4566-a735-1d9a91e8f4eb" />
		</retval>
	</interface>
	<grids>
		<grid height="20" uuid="03dfac86-d473-4f1a-8bb8-4564c7040aa2" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="d90ba9e5-1075-4697-8f87-3c4870257daa" />
				<wire id="1" uuid="38cfed37-6f24-451a-bdb8-d2192c0c4d2a" />
				<wire id="2" uuid="8b9e8433-cae4-4d2f-85c8-b0fc5f0ef3c6" />
				<wire id="3" uuid="e25c8cc8-fb7c-4444-b796-6bc5c5fbbc19" />
				<wire id="4" uuid="1b7d6ea8-0482-4336-ac39-c4c4778e7ce3" />
				<wire id="5" uuid="4f2fae3e-9db7-44fd-b81d-6c9cc0183ee9" />
				<wire id="6" uuid="3e52577a-9453-4428-940d-132868bf1860" />
				<wire id="7" uuid="17d5214b-4f96-4937-ae9b-d504a0b13070" />
			</wires>
			<elements>
				<element subtype="sr" type="boolean" uuid="4c9f1db2-396f-4dad-ad7c-1cea2d83e224" x="2" y="1">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="S" uuid="b2d607ab-a41b-4f4f-a42a-1660f7fe64a8" wire="0" />
						<connection dir_in="1" dir_out="0" pos="1" text="R" uuid="54e5b8ac-3d8f-4e73-a67e-f55c7e14dbc0" wire="-1" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="b99dba5a-de27-4b59-b100-eef3d66060aa" wire="-1" />
					</connections>
					<subelements>
						<element content="#INOUT0" subtype="embedded" type="operand" uuid="f8d525b9-e0f9-46b5-a277-99e6369a9ee6" x="0" y="0" />
					</subelements>
				</element>
				<element content="#IN00" subtype="load" type="operand" uuid="9aa615c3-6ae6-44cc-9b29-dc21200422c2" x="1" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="cb729c1e-cbcf-4c7f-a326-7f1814f9f5c1" wire="0" />
					</connections>
				</element>
				<element subtype="sr" type="boolean" uuid="73e37d76-57e7-4b64-a17a-08daf8289cf6" x="2" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="S" uuid="bde38811-2288-4131-b6c2-5837ff6bd800" wire="1" />
						<connection dir_in="1" dir_out="0" pos="1" text="R" uuid="3ea613af-673c-4bad-a721-4147fd3d20f2" wire="2" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="4dd1c640-61ec-4ace-913d-206f0cdc27f0" wire="-1" />
					</connections>
					<subelements>
						<element content="#INOUT1" subtype="embedded" type="operand" uuid="a5a37b82-dc49-4ac5-a909-cf61b05bb6c5" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="sr" type="boolean" uuid="86972631-51b7-41cb-b2cc-77129cd8330c" x="2" y="9">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="S" uuid="d3b3f9d5-5315-4bc9-be5c-518c9b36b9a1" wire="3" />
						<connection dir_in="1" dir_out="0" pos="1" text="R" uuid="757d0451-5d11-4a50-a7c2-41fa38eeb35a" wire="4" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="3c6cac63-f048-429e-a9b2-7467aea174e3" wire="5" />
					</connections>
					<subelements>
						<element content="#INOUT2" subtype="embedded" type="operand" uuid="83a2c76f-5672-49c2-99d1-5f71e7829e8e" x="0" y="0" />
					</subelements>
				</element>
				<element content="#IN10" subtype="load" type="operand" uuid="e920459c-3331-40dc-a040-abd362253ca8" x="1" y="6">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="5b260de1-d6ad-4afa-a466-2d0c2ded6d6c" wire="1" />
					</connections>
				</element>
				<element content="#IN11" subtype="load" type="operand" uuid="790ca841-42fc-4946-b3a2-b36d92e0642e" x="1" y="7">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="d371fb0e-5203-438f-b289-b9f61d4c2778" wire="2" />
					</connections>
				</element>
				<element content="#IN20" subtype="load" type="operand" uuid="55ea0879-70e1-4bfe-aedf-911e0d3c8b62" x="1" y="10">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="8c7a9201-49be-4fca-ab2d-e7db168b8224" wire="3" />
					</connections>
				</element>
				<element content="#IN21" subtype="load" type="operand" uuid="30292098-dd98-4b95-99dc-9394127f7651" x="1" y="11">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="5081edbf-1358-4a74-b0e0-e48e50498f21" wire="4" />
					</connections>
				</element>
				<element content="#OUT20" subtype="assign" type="operand" uuid="52f9080b-b67d-4037-a5c1-007aca27b18f" x="3" y="11">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="f4c33269-d758-4033-994e-58ce56edb978" wire="5" />
					</connections>
				</element>
				<element subtype="sr" type="boolean" uuid="c5ca5d70-00e0-42ad-9365-1caf25072683" x="2" y="13">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="S" uuid="495474f7-16af-4b0f-8148-cde0e20836f5" wire="6" />
						<connection dir_in="1" dir_out="0" pos="1" text="R" uuid="00e1662e-3bf7-4938-a25b-0e60da89f66b" wire="-1" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="43c8214f-d611-4c58-ae83-de0095ca0425" wire="7" />
					</connections>
					<subelements>
						<element content="#INOUT3" subtype="embedded" type="operand" uuid="7785e884-f28a-48c7-b30f-b53c7ee641dd" x="0" y="0" />
					</subelements>
				</element>
				<element content="#IN30" subtype="load" type="operand" uuid="98e6f0fc-9658-4636-947c-3c7817eda023" x="1" y="14">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="75a50aa3-03f3-44b6-8a15-36d7f11d9739" wire="6" />
					</connections>
				</element>
				<element content="#OUT30" subtype="assign" type="operand" uuid="86c30e74-7531-418b-80e9-50febd22c747" x="3" y="15">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="c49bd324-9e3f-407a-b8f0-e9c7a3c90cbc" wire="7" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="sr 2"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_sr_2"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN00" type="BOOL" uuid="095d0665-2cb9-42d1-81e3-9a0d67022895" />
			<field name="IN10" type="BOOL" uuid="c8324059-75c1-458b-ad73-c91c9856dad1" />
			<field name="IN11" type="BOOL" uuid="5ffad1ab-f36d-4095-899b-786f8864f5f3" />
			<field name="IN20" type="BOOL" uuid="1ab0278c-9a43-47d4-9843-2b08ea562b55" />
			<field name="IN21" type="BOOL" uuid="34e6ef98-d5b9-4d28-9c98-a9072b8c3a90" />
			<field name="IN30" type="BOOL" uuid="7be02980-dd05-4a9d-abaf-f2c7e5a443ff" />
		</inputs>
		<outputs>
			<field name="OUT20" type="BOOL" uuid="9c92a12e-1a33-4cd2-966e-b7db8a3bbcb3" />
			<field name="OUT30" type="BOOL" uuid="f6df5456-9fb3-41cb-a83e-58de1baa7da9" />
		</outputs>
		<inouts>
			<field name="INOUT0" type="BOOL" uuid="987ab796-f9a4-456c-88cc-c986f7d8b2ef" />
			<field name="INOUT1" type="BOOL" uuid="1cbc3ae8-63d2-46a9-bab6-5637105db2ea" />
			<field name="INOUT2" type="BOOL" uuid="04f9af00-ac8e-4b54-b3b7-cc5a30987f0e" />
			<field name="INOUT3" type="BOOL" uuid="9e491941-1d4d-4f5b-9b5c-bdd1756d38e4" />
		</inouts>
		<retval>
			<field name="RET_VAL" type="VOID" uuid="8ade14ea-26fa-4cfb-82a7-7fe2fe9e7421" />
		</retval>
	</interface>
	<grids>
		<grid height="20" uuid="26dd82de-708f-4aea-b717-a2c2567002ec" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="d01893ea-49d4-4fca-804d-276b36bcc57c" />
				<wire id="1" uuid="352875c4-b587-4a5f-8b8d-4b748349e045" />
				<wire id="2" uuid="f0941515-a1b7-45f6-bf19-46915b60442e" />
				<wire id="3" uuid="96d6144d-6a76-4d6a-a0dd-d946335a7b37" />
				<wire id="4" uuid="6ea3ac17-7735-44d7-8b28-7f8886f01604" />
				<wire id="5" uuid="16e7115a-01e7-4fa9-8d0e-6be1b9603bc5" />
				<wire id="6" uuid="df575f50-5d61-460a-9851-8945c937b57c" />
				<wire id="7" uuid="194c6738-5f92-4f08-a410-30699fd31479" />
			</wires>
			<elements>
				<element subtype="rs" type="boolean" uuid="0fb1ca0b-8b28-465b-9ef1-2b67a081f0f5" x="2" y="1">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="R" uuid="dcebc1c9-dc7b-4ac5-acba-a4541774b86f" wire="0" />
						<connection dir_in="1" dir_out="0" pos="1" text="S" uuid="b47e371a-6d6d-4aab-8aec-8f950204fb35" wire="-1" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="98884e16-71d3-4136-a54b-bd57c31dc175" wire="-1" />
					</connections>
					<subelements>
						<element content="#INOUT0" subtype="embedded" type="operand" uuid="e6030031-455c-4fc0-bcb9-34dbff1a4fd8" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="rs" type="boolean" uuid="e6495afb-a82c-4929-97f4-21ce5229309a" x="2" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="R" uuid="923bcf9d-34f1-40ea-babb-84c09a41341e" wire="1" />
						<connection dir_in="1" dir_out="0" pos="1" text="S" uuid="b4ade0e4-d834-459b-88db-b0bcd9aa08fc" wire="2" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="d2e47622-f7b8-45f8-8d69-756c1cb2446b" wire="-1" />
					</connections>
					<subelements>
						<element content="#INOUT1" subtype="embedded" type="operand" uuid="290c9726-3e18-4301-9bd3-efe1063a4276" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="rs" type="boolean" uuid="778f0969-d12c-43a9-95f7-f749cea4216f" x="2" y="9">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="R" uuid="adb4ee3c-af18-4687-8e8d-889733db605c" wire="3" />
						<connection dir_in="1" dir_out="0" pos="1" text="S" uuid="ca54c124-6085-488d-8c6f-a481219f2e2c" wire="4" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="c4d4e332-248f-45e8-a256-0958f1392468" wire="5" />
					</connections>
					<subelements>
						<element content="#INOUT2" subtype="embedded" type="operand" uuid="1ed903f1-5123-498b-811a-00b56a54ff6c" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="rs" type="boolean" uuid="918fa4b3-9a62-4c8a-84a8-5be335f96e25" x="2" y="13">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="R" uuid="3795bbc1-d47b-4c63-9673-5418f2f25f49" wire="7" />
						<connection dir_in="1" dir_out="0" pos="1" text="S" uuid="ce4cbd9d-c342-4774-b12c-49f560e4700b" wire="-1" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="27bac0de-7313-4f53-b857-6a4762f637b6" wire="6" />
					</connections>
					<subelements>
						<element content="#INOUT3" subtype="embedded" type="operand" uuid="80419262-eeb3-4afd-a026-ff0ae558ac13" x="0" y="0" />
					</subelements>
				</element>
				<element content="#IN00" subtype="load" type="operand" uuid="1fe1d66a-dbae-42bd-8bda-4903bd949806" x="1" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="01e1210a-8802-4051-b484-0bbb74ea56f5" wire="0" />
					</connections>
				</element>
				<element content="#IN10" subtype="load" type="operand" uuid="f1955aef-f875-4d3c-a91c-62648ff6f90a" x="1" y="6">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="9b73bb72-4f78-4d73-8fcb-e8ccd4e95871" wire="1" />
					</connections>
				</element>
				<element content="#IN11" subtype="load" type="operand" uuid="7a1ad44d-a77c-4ef7-bd07-f7a88ae58151" x="1" y="7">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="1a5f2358-fcc2-413b-9416-96b0153e528f" wire="2" />
					</connections>
				</element>
				<element content="#IN20" subtype="load" type="operand" uuid="a2ca1650-3cc0-4ec3-8100-ed7ad2459e23" x="1" y="10">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="79cdda4d-3c95-485d-bca1-ab6e7471ba2b" wire="3" />
					</connections>
				</element>
				<element content="#IN21" subtype="load" type="operand" uuid="80e9944f-4fbc-4042-92fb-b9ef31e98f81" x="1" y="11">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="5a33c580-2061-426e-96cf-6e6540d7cc73" wire="4" />
					</connections>
				</element>
				<element content="#OUT20" subtype="assign" type="operand" uuid="405b8243-8173-4a3b-9d34-80bbd89b2c6b" x="3" y="11">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="57bfb612-82cb-4c18-9ca0-11e869b7607c" wire="5" />
					</connections>
				</element>
				<element content="#OUT30" subtype="assign" type="operand" uuid="17c508f3-f740-4b4c-b88d-b7b98bc980e0" x="3" y="15">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="31a47146-ad23-4c05-991b-a6dd5acaf421" wire="6" />
					</connections>
				</element>
				<element content="#IN30" subtype="load" type="operand" uuid="880ecfbf-8801-4386-a58d-d6f015a48321" x="1" y="14">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="dcaa9bd9-d167-4e60-a28e-4571e8e9bbab" wire="7" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="sr 3"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_sr_3"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN0" type="BOOL" uuid="d292f9a4-62ad-4e4b-9ad4-ea96818ff2ed" />
			<field name="IN1" type="BOOL" uuid="32e890d8-9ae9-4773-90c4-288e7c3d877f" />
			<field name="IN2" type="BOOL" uuid="f2e88579-1273-4777-af93-be0a89a7442e" />
			<field name="IN3" type="BOOL" uuid="c4fe931b-d665-4dca-8cc7-483c363587e9" />
		</inputs>
		<inouts>
			<field name="INOUT0" type="BOOL" uuid="b6caa01e-a4e3-4595-afa7-d38dc41f0277" />
			<field name="INOUT1" type="BOOL" uuid="dbab174d-4df3-450a-a580-32fc846dad99" />
			<field name="INOUT2" type="BOOL" uuid="8715f8b8-46a3-4cc8-ba9e-b63bbce2d1b6" />
			<field name="INOUT3" type="BOOL" uuid="0d57626d-6129-46d1-81e3-49797b6fa233" />
		</inouts>
		<retval>
			<field name="RET_VAL" type="VOID" uuid="96636004-eaff-4bf1-b559-e1b540db3b2a" />
		</retval>
	</interface>
	<grids>
		<grid height="18" uuid="60f066e0-127f-412a-9444-cf32ee5d8703" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="d09e567b-6366-4eea-987e-3fcb4746e409" />
				<wire id="1" uuid="53f3e33b-0824-4d95-8e6d-4d795e750cd9" />
				<wire id="2" uuid="d9d6355f-94ea-4633-bb71-9aa431aa2c16" />
				<wire id="3" uuid="ad7f8934-c239-411e-a3a3-35c7d5fd4c25" />
			</wires>
			<elements>
				<element subtype="s" type="boolean" uuid="08c4bc4e-1ab8-4229-b1cb-87b0775df12b" x="2" y="1">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="be5fc576-329a-43c6-ba65-2c14a7748f9b" wire="0" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="2808a1e3-7981-4cab-a278-a4271091c491" wire="-1" />
					</connections>
					<subelements>
						<element content="#INOUT0" subtype="embedded" type="operand" uuid="a9b33e7d-2089-4389-b0d0-e3d2297fccae" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="r" type="boolean" uuid="1af2c456-41d6-4f26-9080-b850ea52821a" x="2" y="4">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="437bd38c-2b76-40a2-b18d-3222ed8a1010" wire="1" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="e494b7ff-bcab-476a-bf84-5399348c4eb8" wire="-1" />
					</connections>
					<subelements>
						<element content="#INOUT1" subtype="embedded" type="operand" uuid="d0369130-ac65-43a7-bb28-9d3550ee03a3" x="0" y="0" />
					</subelements>
				</element>
				<element content="#IN0" subtype="load" type="operand" uuid="404131a2-e3a6-47fd-9c72-2e82b2b331d7" x="1" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="fceeec0a-aef6-4c02-8ab7-8741275bc5b3" wire="0" />
					</connections>
				</element>
				<element content="#IN1" subtype="load" type="operand" uuid="162f4a47-db16-4661-b1b2-2a0e142094c2" x="1" y="5">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="a47c7c3c-c65a-4c42-bafe-ca8dd97e01ea" wire="1" />
					</connections>
				</element>
				<element subtype="s" type="boolean" uuid="ecac7a6f-0fcc-4e87-90f9-055350208654" x="2" y="7">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" uuid="3585f91b-33ae-43a1-8584-df0c846a66ae" wire="2" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="1c2fce1d-7e6e-4c8f-9886-195484357498" wire="-1" />
					</connections>
					<subelements>
						<element content="#INOUT2" subtype="embedded" type="operand" uuid="83b83053-1036-4316-bd79-8b43aa80226a" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="r" type="boolean" uuid="e934de82-c3e9-43c0-b1ae-3b4777db194e" x="2" y="10">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" uuid="56012be8-dfd3-4d2a-9d01-64748142e222" wire="3" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="8ad7ff24-50ca-4243-a737-718c3843ba55" wire="-1" />
					</connections>
					<subelements>
						<element content="#INOUT3" subtype="embedded" type="operand" uuid="73f17fb4-be7c-40e2-8766-be246fc5e006" x="0" y="0" />
					</subelements>
				</element>
				<element content="#IN2" subtype="load" type="operand" uuid="da2fe6dd-45d6-4428-813a-7e7b39b932e3" x="1" y="8">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="dc22698e-6283-43dd-853f-0d5e3e980191" wire="2" />
					</connections>
				</element>
				<element content="#IN3" subtype="load" type="operand" uuid="f6e474cd-7a57-4898-b7ad-f37163e8a2a6" x="1" y="11">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="4d47449a-9604-4990-83ad-48bd6d11f088" wire="3" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="sr 4"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_sr_4"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN00" type="BOOL" uuid="a6a3abf7-aa5d-496e-b6ed-b8ad51c1658d" />
			<field name="IN01" type="BOOL" uuid="cbdace43-44a0-435f-958a-6138ac9bc914" />
			<field name="IN10" type="BOOL" uuid="96fc9828-275a-497c-b505-81e68b4d9861" />
			<field name="IN11" type="BOOL" uuid="06968a8c-06ac-4a00-9fae-895428ff900d" />
		</inputs>
		<outputs>
			<field name="OUT0" type="BOOL" uuid="375d8e04-2925-4d5d-882b-51bebc11b014" />
			<field name="OUT1" type="BOOL" uuid="a26cd29a-24ac-4a97-9aab-30e4a051976a" />
		</outputs>
		<inouts>
			<field name="INOUT0" type="BOOL" uuid="7b0682bb-5475-4c6c-8c8d-3fcf7878aa7f" />
			<field name="INOUT1" type="BOOL" uuid="90b310a0-efaf-4df2-a30c-a8e2b7f93902" />
		</inouts>
		<retval>
			<field name="RET_VAL" type="VOID" uuid="51006055-1ff3-49c6-8b15-26d8217ab346" />
		</retval>
	</interface>
	<grids>
		<grid height="18" uuid="289281de-afa3-49b9-a4c2-3b182b86d54e" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="c589ec23-615c-4f2c-998b-1dfb1bcdc362" />
				<wire id="1" uuid="0ee5c88c-aac7-49fa-a049-25553171e365" />
				<wire id="2" uuid="39fe820d-aba5-4fdc-a251-bdc21a0b8c5a" />
				<wire id="3" uuid="347f7f58-1da6-4081-958e-74a86c5bb1ac" />
				<wire id="4" uuid="6bff0e43-3217-4896-8f24-c4a93f3a7f59" />
				<wire id="5" uuid="8a57b1b7-04a2-4c27-838d-14a2a1618713" />
			</wires>
			<elements>
				<element subtype="sr" type="boolean" uuid="2f96827b-fc95-4716-b3f7-6a28275dcde6" x="2" y="1">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" text="S" uuid="4be1bbf6-0784-45c4-8eba-6602c59e3ebc" wire="0" />
						<connection dir_in="1" dir_out="0" inverted="1" pos="1" text="R" uuid="8668ae87-3edf-44cc-992c-d565a59c4931" wire="1" />
						<connection dir_in="0" dir_out="1" inverted="1" pos="0" text="Q" uuid="a411a1c9-c5bd-48bf-97dc-d86330c70c33" wire="4" />
					</connections>
					<subelements>
						<element content="#INOUT0" subtype="embedded" type="operand" uuid="39e24914-121b-4172-aad7-868cc9b1733f" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="rs" type="boolean" uuid="acdcd811-dc52-4b77-b204-30697017868d" x="2" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" text="R" uuid="7299f78c-6a48-4eed-950d-0c74221f56ee" wire="2" />
						<connection dir_in="1" dir_out="0" inverted="1" pos="1" text="S" uuid="939634dc-945f-44a3-ad55-693b03c72a1d" wire="3" />
						<connection dir_in="0" dir_out="1" inverted="1" pos="0" text="Q" uuid="e4b01a5f-ff5b-4604-95a4-deeee1b8eafb" wire="5" />
					</connections>
					<subelements>
						<element content="#INOUT1" subtype="embedded" type="operand" uuid="1bbaa3e3-7dd1-49be-b651-ce5071ff7d29" x="0" y="0" />
					</subelements>
				</element>
				<element content="#IN00" subtype="load" type="operand" uuid="6deb3c82-ce5e-46c3-9fc2-843e8406d818" x="1" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="a214a92d-13f3-4aa0-9bbb-b44ba71a0c01" wire="0" />
					</connections>
				</element>
				<element content="#IN01" subtype="load" type="operand" uuid="cead6e37-d5a8-42cd-9b7f-d100178abbe6" x="1" y="3">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="e894145c-f844-4397-8c1b-cbece33879b6" wire="1" />
					</connections>
				</element>
				<element content="#IN10" subtype="load" type="operand" uuid="41bf0290-4457-42c3-a4ee-6e724c0e01f5" x="1" y="6">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="cdb539b3-ed21-425d-bd22-c124cd5ef276" wire="2" />
					</connections>
				</element>
				<element content="#IN11" subtype="load" type="operand" uuid="628cc828-53c2-4513-af6a-7ac152b8f465" x="1" y="7">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="9989ddb4-58fa-46ae-82e8-b653efd63801" wire="3" />
					</connections>
				</element>
				<element content="#OUT0" subtype="assign" type="operand" uuid="40d419e7-8e7c-4c31-b6d9-dc2d31f4f482" x="3" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="aedaeadd-f3ac-4b63-b128-d2ce16c53d6d" wire="4" />
					</connections>
				</element>
				<element content="#OUT1" subtype="assign" type="operand" uuid="d4df1a80-3bd2-4941-902f-045ea66f3feb" x="3" y="7">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="f8318f37-ad61-42a7-8747-968bd3073703" wire="5" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="sr 5"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_sr_5"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN00" type="BOOL" uuid="0e9dc9bf-d975-4cb8-80db-46c48afc5147" />
			<field name="IN01" type="BOOL" uuid="ed289638-3515-4c35-b113-967047b83a35" />
			<field name="IN11" type="BOOL" uuid="53f86edb-34db-4644-bbe6-171caabe3d89" />
			<field name="IN21" type="BOOL" uuid="66aa987a-721a-4525-b86f-586c7e7fd882" />
			<field name="IN30" type="BOOL" uuid="7a139956-441e-4e18-8a47-b8cf9023a576" />
		</inputs>
		<outputs>
			<field name="OUT1" type="BOOL" uuid="4148b552-c579-4e91-8605-7350d31a07b1" />
			<field name="OUT3" type="BOOL" uuid="cc143b8f-fcf6-4c9e-ac4e-50fc0d15ab88" />
		</outputs>
		<inouts>
			<field name="INOUT1" type="BOOL" uuid="c7db7efd-2917-41f2-a22e-d93f53965ab3" />
			<field name="INOUT2" type="BOOL" uuid="36769834-b1d2-4d78-badd-7a471bfce543" />
		</inouts>
		<retval>
			<field name="RET_VAL" type="VOID" uuid="88835b80-c8ff-408e-bfca-78f02e9e0cb4" />
		</retval>
	</interface>
	<grids>
		<grid height="18" uuid="b7dd8113-450d-454f-8c86-d9524e6ced88" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="a77e14bf-57dc-497a-9bc4-d5ca0217140b" />
				<wire id="1" uuid="a54cb533-1a66-439f-87f8-473edcb25b5f" />
				<wire id="2" uuid="7bbda5fb-40f8-4cfe-8a52-e830b061955f" />
				<wire id="3" uuid="ec85f62e-91ea-47b5-9242-fdfd21d91f9c" />
				<wire id="4" uuid="b4f33645-51df-4e1d-9261-b2e669af9dad" />
				<wire id="5" uuid="a460118a-9f38-456a-b8c2-4a56e493ac04" />
				<wire id="6" uuid="46ec87a8-f04b-4233-ac51-40dad8eef23e" />
				<wire id="7" uuid="ceaf1346-4c12-42e3-b55f-e00507a25cd1" />
				<wire id="8" uuid="c8afac92-37ab-427e-8d4a-d04ec6804875" />
			</wires>
			<elements>
				<element subtype="sr" type="boolean" uuid="3fded3d2-1736-48e5-8458-dddd25fad944" x="3" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="S" uuid="e7cceb09-3145-4767-8759-df7763029f45" wire="1" />
						<connection dir_in="1" dir_out="0" pos="1" text="R" uuid="ca827d83-5551-4d4d-9366-b1d5e8350aab" wire="6" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="a83537c1-93c4-410d-81e5-dd3ea004d08c" wire="0" />
					</connections>
					<subelements>
						<element content="#INOUT1" subtype="embedded" type="operand" uuid="b50dec29-26f4-48ae-8ae9-5732fb621ecf" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="and" type="boolean" uuid="7ac8225d-5fd3-4ac4-abca-86fa49bcffdb" x="2" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="5bbf8341-ada3-4f17-bfc6-0808310101cc" wire="2" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="307b33b6-0673-47ab-a8f5-ab4326933732" wire="3" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="21bc4e37-9b18-4627-9f4e-5990f54e1890" wire="1" />
					</connections>
				</element>
				<element subtype="and" type="boolean" uuid="dc554467-d6b4-4e70-9c32-b935bfe205d9" x="6" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="767843d3-fc9e-45d1-ab6e-3cf1986c5655" wire="8" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="1856fbca-30e1-4d07-a2fe-15f3431c9f10" wire="4" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="dcd2ce38-2478-4f98-bfb9-b3cb8d133dd5" wire="5" />
					</connections>
				</element>
				<element content="#IN00" subtype="load" type="operand" uuid="1f27f63e-c871-4e3a-938e-ca2836dc9c01" x="1" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="ddad7093-d948-4b3d-9207-277a90a62ba8" wire="2" />
					</connections>
				</element>
				<element content="#IN01" subtype="load" type="operand" uuid="e3ee862a-29ca-4f2b-bd90-edaf73828fa7" x="1" y="3">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="bece29fb-28b3-4fed-b49c-64ff822bb4b7" wire="3" />
					</connections>
				</element>
				<element content="#IN30" subtype="load" type="operand" uuid="8eaac067-2344-42b0-b232-35be400d6738" x="5" y="6">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="44ed476b-2fe2-4143-8c6b-96a7883bee30" wire="4" />
					</connections>
				</element>
				<element content="#OUT3" subtype="assign" type="operand" uuid="9f00b9c0-acd4-4ea0-84fd-693bad1bcc8a" x="7" y="6">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="3e3d5b7f-39aa-4a47-9c83-cec86600bbde" wire="5" />
					</connections>
				</element>
				<element content="#OUT1" subtype="assign" type="operand" uuid="64916973-cae8-4968-83a6-700662d971dd" x="4" y="7">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="5340fee0-4f8f-4613-a42c-9aa140a23545" wire="0" />
					</connections>
				</element>
				<element content="#IN21" subtype="load" type="operand" uuid="6873e8ae-88b3-476f-ad5a-fef2ed697552" x="4" y="5">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="6babf55c-854d-4412-87e1-7b36722b7842" wire="7" />
					</connections>
				</element>
				<element content="#IN11" subtype="load" type="operand" uuid="3f9ad11e-ef1b-421b-b786-fbb8dd9b396a" x="2" y="4">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="19049e48-34d7-452d-a14a-264bce8cda15" wire="6" />
					</connections>
				</element>
				<element subtype="sr" type="boolean" uuid="b3f06f41-26a1-4b81-aed1-18b5d0e84e0a" x="5" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="S" uuid="4f760df6-c9f5-4ae5-96b9-5a70206d35e8" wire="0" />
						<connection dir_in="1" dir_out="0" pos="1" text="R" uuid="681eaed4-fe47-42bc-a50f-f5644ec9430c" wire="7" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="f06e10ed-eeea-4988-9854-cf9756937f7e" wire="8" />
					</connections>
					<subelements>
						<element content="#INOUT2" subtype="embedded" type="operand" uuid="0b4795f0-18d0-40c5-99c1-f7c7906e204d" x="0" y="0" />
					</subelements>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="sr 6"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_sr_6"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN0" type="BOOL" uuid="59e6f6f7-67c6-47f6-a21b-345aa28ffd14" />
			<field name="IN2" type="BOOL" uuid="f1ed5445-a196-4acf-a655-d4aefce6d641" />
		</inputs>
		<inouts>
			<field name="INOUT0" type="BOOL" uuid="e9ef3d7f-589b-4422-8ab5-bc46a69a3d46" />
			<field name="INOUT1" type="BOOL" uuid="740fdd38-c18c-4745-885d-c91c92523fa0" />
			<field name="INOUT2" type="BOOL" uuid="3db91ed2-4355-40ef-bd0d-6535366d7e8c" />
			<field name="INOUT3" type="BOOL" uuid="fb4ce34a-61ab-449a-a0b6-e3c604d34773" />
			<field name="INOUT4" type="BOOL" uuid="8aacede7-174b-42ba-a48d-ae955ca1671f" />
		</inouts>
		<retval>
			<field name="RET_VAL" type="VOID" uuid="39c2edf5-057e-42fc-b75d-9723493acf0c" />
		</retval>
	</interface>
	<grids>
		<grid height="18" uuid="c287fe7a-0ea3-4612-b5e2-3a6b49a86990" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="60aca6f1-b17e-44ac-9131-39ffdfadb513" />
				<wire id="1" uuid="98618dbb-daf7-42fe-b132-c9190631e023" />
				<wire id="2" uuid="ddd20113-d256-4dfa-8a63-4a479b8f8b6b" />
				<wire id="3" uuid="d9c82e21-1f31-4fbf-89d6-4e181999a3a0" />
				<wire id="4" uuid="4dfee422-b708-4454-bccc-87ba5cebdc86" />
				<wire id="5" uuid="eb1e6cc3-494e-4839-8f98-0d5e0821c275" />
			</wires>
			<elements>
				<element subtype="s" type="boolean" uuid="84c375bc-aedf-4950-ac9e-46d04d92b372" x="2" y="1">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="S" uuid="9c71f381-fda4-49d8-987f-508dfa06234d" wire="4" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="6fecee28-dba2-409a-a8e2-871aa9b44c76" wire="0" />
					</connections>
					<subelements>
						<element content="#INOUT0" subtype="embedded" type="operand" uuid="715534bf-103a-43eb-9dc3-f5b6f33c6c4e" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="r" type="boolean" uuid="524c3eff-4e43-4a06-b51b-030d274e912e" x="3" y="1">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="R" uuid="c374708c-b324-4793-9b67-f75a67a312b7" wire="0" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="cea8d544-fc84-47d1-a537-75b2db625fd4" wire="3" />
					</connections>
					<subelements>
						<element content="#INOUT1" subtype="embedded" type="operand" uuid="6882bab3-e5a7-46a9-a34b-dcfef1bf8ec9" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="sr" type="boolean" uuid="6caa16ee-9db9-4b45-a0c2-c8bc7c61faaa" x="4" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" text="S" uuid="d885682d-21d8-43cb-a0d1-fcdc0be0cce0" wire="3" />
						<connection dir_in="1" dir_out="0" inverted="1" pos="1" text="R" uuid="604f4b49-e720-485d-a30f-22b2ad76559d" wire="2" />
						<connection dir_in="0" dir_out="1" pos="0" text="Q" uuid="f821ef5c-5728-48fe-a601-e2e1341d1c16" wire="-1" />
					</connections>
					<subelements>
						<element content="#INOUT4" subtype="embedded" type="operand" uuid="cb361b04-7f81-4616-92ce-35f5040adb0d" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="s" type="boolean" uuid="3bcd1079-cb36-44d2-9015-336d2c4df78b" x="3" y="4">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" text="S" uuid="112e7e3c-67b8-465e-b5f3-2ca453a4cf2e" wire="1" />
						<connection dir_in="0" dir_out="1" inverted="1" pos="0" text="Q" uuid="7797062a-762e-4fca-bf7e-3ffa7851501e" wire="2" />
					</connections>
					<subelements>
						<element content="#INOUT3" subtype="embedded" type="operand" uuid="0b659d6f-6db7-463c-964d-d20fc520493e" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="r" type="boolean" uuid="531c5991-1d51-4f6f-b38b-06c6e71d8050" x="2" y="4">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" text="R" uuid="a9907341-17ca-48f0-8833-2a3fcebc2e0b" wire="5" />
						<connection dir_in="0" dir_out="1" inverted="1" pos="0" text="Q" uuid="f47d2df6-9dea-4870-8251-9d1d5a0eeeec" wire="1" />
					</connections>
					<subelements>
						<element content="#INOUT2" subtype="embedded" type="operand" uuid="0f9a90c8-d773-4746-895a-77c1c053da08" x="0" y="0" />
					</subelements>
				</element>
				<element content="#IN0" subtype="load" type="operand" uuid="d0672aad-0b75-410e-a47c-1f03b2c9694a" x="1" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="c7cd24e9-dc81-4811-8e3a-baad931f5d54" wire="4" />
					</connections>
				</element>
				<element content="#IN2" subtype="load" type="operand" uuid="10958365-42ce-4959-a015-18221260933e" x="1" y="5">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="6c121ed5-6682-4af9-ac40-8e8751fc6b7e" wire="5" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="edge 1"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_edge_1"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN0" type="BOOL" uuid="de7b0854-3127-44c7-a229-b8af040d8610" />
			<field name="IN1" type="BOOL" uuid="8fd938d8-af7e-4c6a-af94-90b2752f46cb" />
			<field name="IN2" type="BOOL" uuid="80af4b13-8443-4c01-a012-12efb9a8d58c" />
			<field name="IN3" type="BOOL" uuid="99300279-4a77-4488-8288-69b59603e0ce" />
		</inputs>
		<outputs>
			<field name="OUT0" type="BOOL" uuid="b0138ed8-0ebb-4f6e-81b2-6369af646eba" />
			<field name="OUT1" type="BOOL" uuid="3b5218c6-12da-47e0-81ae-197aaec15f48" />
			<field name="OUT2" type="BOOL" uuid="69c85bc6-fdd6-4eb9-a9b4-317128b87359" />
			<field name="OUT3" type="BOOL" uuid="92d464e4-94a1-41f1-a29e-f78cac5d0f90" />
		</outputs>
		<inouts>
			<field name="INOUT0" type="BOOL" uuid="15fed2ca-f986-4c97-9a82-258596a9d1b1" />
			<field name="INOUT1" type="BOOL" uuid="ece75753-77c4-4e94-aa83-4ffede3659e4" />
			<field name="INOUT2" type="BOOL" uuid="0c512366-c635-42cd-a730-8f27716db108" />
			<field name="INOUT3" type="BOOL" uuid="9973e33a-5478-4719-bb45-fdfdeea0d855" />
		</inouts>
		<retval>
			<field name="RET_VAL" type="VOID" uuid="66163e09-093f-443b-884d-92f143819277" />
		</retval>
	</interface>
	<grids>
		<grid height="18" uuid="2fb0c06b-25ee-4b30-a06d-709baa890a93" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="98009117-72a0-492f-8d60-4b3801b69671" />
				<wire id="1" uuid="6fda0c6d-331d-4685-a898-4e71d26e4b4f" />
				<wire id="2" uuid="14cbf72b-47b0-4a6d-b490-5b2f9a872512" />
				<wire id="3" uuid="0cb7c0f7-b4e5-4530-a878-e63fa4972196" />
				<wire id="4" uuid="7aadfbc6-65ee-4fd7-bd32-3c816f7875ed" />
				<wire id="5" uuid="8e63b8fe-9b4d-4613-9c60-e115d51ab57d" />
				<wire id="6" uuid="4d96f19c-a569-4f0c-9497-6463ca30f4a1" />
				<wire id="7" uuid="224fe3cc-f2ac-4dbf-bd75-82cb678c253f" />
			</wires>
			<elements>
				<element subtype="fp" type="boolean" uuid="4acfa84c-08ba-45e0-a6f6-0b01ef04e653" x="2" y="1">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="181967b1-ce03-4f71-9a89-005595189836" wire="0" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="4b651e6d-0b87-4d22-b0ab-28a8493f220c" wire="1" />
					</connections>
					<subelements>
						<element content="#INOUT0" subtype="embedded" type="operand" uuid="c086ff20-928a-4d7e-b06e-c1e2c30e18aa" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="fn" type="boolean" uuid="c0d4569e-2fea-40cd-be81-e91f18bcc040" x="2" y="4">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="d5e18234-bc12-4f7e-ad89-5a67af98e4b9" wire="2" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="31973a23-07e7-4625-8a09-05a3aa28bf5a" wire="3" />
					</connections>
					<subelements>
						<element content="#INOUT1" subtype="embedded" type="operand" uuid="88632909-148f-4e30-aa2e-f0b2fabb73b5" x="0" y="0" />
					</subelements>
				</element>
				<element content="#IN0" subtype="load" type="operand" uuid="75010666-860e-4390-a946-6d6483ae88c6" x="1" y="2">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="b71c3114-8d1a-42cd-b221-22f388b4949c" wire="0" />
					</connections>
				</element>
				<element content="#OUT0" subtype="assign" type="operand" uuid="f0bec595-ad3b-4120-bbd7-fc861d3b7aef" x="3" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="07b59816-d506-4f4f-8b69-f574f58ffd7d" wire="1" />
					</connections>
				</element>
				<element content="#IN1" subtype="load" type="operand" uuid="8cc86aa1-b94f-4706-95e9-3c0ba7d89780" x="1" y="5">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="f46af41f-5d1e-4e9c-86f4-806f257eba5a" wire="2" />
					</connections>
				</element>
				<element content="#OUT1" subtype="assign" type="operand" uuid="3533b5cd-a1df-496a-bfa4-5803750823b0" x="3" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="474cfc49-65d0-4f6c-a1cd-785059273a5e" wire="3" />
					</connections>
				</element>
				<element subtype="fp" type="boolean" uuid="bac38a3b-7910-45a0-a910-67e785781721" x="2" y="7">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" uuid="d82d58ce-aaf4-402d-b06b-158385f3e079" wire="4" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="cbe0438a-7855-42bd-877d-f4e96849dcde" wire="6" />
					</connections>
					<subelements>
						<element content="#INOUT2" subtype="embedded" type="operand" uuid="80053d8d-04d9-4aa5-8870-842b74d13700" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="fn" type="boolean" uuid="d1e8313e-f922-42a5-8b9f-51498a46792e" x="2" y="10">
					<connections>
						<connection dir_in="1" dir_out="0" inverted="1" pos="0" uuid="ab8d0f0c-dd1e-4e05-8095-3216472c3ec9" wire="5" />
						<connection dir_in="0" dir_out="1" inverted="1" pos="0" uuid="4c7689e9-832b-4f50-aafb-acd2180a1b26" wire="7" />
					</connections>
					<subelements>
						<element content="#INOUT3" subtype="embedded" type="operand" uuid="a9c75d72-eca9-43d0-be83-4404fd6ac7e6" x="0" y="0" />
					</subelements>
				</element>
				<element content="#IN2" subtype="load" type="operand" uuid="fd36cf8c-88e4-4320-9f73-b3cf2efe3bd8" x="1" y="8">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="11ca408f-80c9-4f4e-b7c2-a73082eb0f5f" wire="4" />
					</connections>
				</element>
				<element content="#IN3" subtype="load" type="operand" uuid="ca863302-943f-40c4-916a-9ee9ad42ed43" x="1" y="11">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="1eac09b4-635f-4cd1-9b66-b8c1d305454b" wire="5" />
					</connections>
				</element>
				<element content="#OUT2" subtype="assign" type="operand" uuid="76d97b58-98eb-4912-9267-ff365ea85b49" x="3" y="8">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="efe118b5-a16e-4d30-ba8f-898db6c549e3" wire="6" />
					</connections>
				</element>
				<element content="#OUT3" subtype="assign" type="operand" uuid="39fd519e-0fb9-472d-b3ea-65b103f95bc7" x="3" y="11">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="e5a372b1-0cef-483c-a485-6c6b7b68ca0c" wire="7" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>

		<!-- FUP/FBD source code -->
		<source enabled="1"
		        name="edge 2"
		        type="1"><![CDATA[
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Awlsim FUP/FBD source generated by awlsim-0.66.0-pre -->
<FUP version="0" zoom="1.0">
	<blockdecl name='"FC_edge_2"' type="FC" />
	<interface allow_initvalue="0"
	           allow_inouts="1"
	           allow_inputs="1"
	           allow_outputs="1"
	           allow_retval="1"
	           allow_stats="0"
	           allow_temps="1">
		<inputs>
			<field name="IN00" type="BOOL" uuid="6276b43e-9f7b-41f1-9331-66448aa604da" />
			<field name="IN01" type="BOOL" uuid="8c6f9c6a-d42a-4548-be08-5456285f4b0e" />
			<field name="IN21" type="BOOL" uuid="3ed79623-1b1e-40f8-8f5f-0312e997f9f8" />
		</inputs>
		<outputs>
			<field name="OUT1" type="BOOL" uuid="d948a3ad-eaf6-41bf-b6dd-3c1c2d065b8d" />
			<field name="OUT2" type="BOOL" uuid="26d15031-d479-4387-aa0a-8fb631c83f37" />
		</outputs>
		<inouts>
			<field name="INOUT1" type="BOOL" uuid="a37ae1fc-9284-45d6-83b6-d82e8dbd0bac" />
		</inouts>
		<retval>
			<field name="RET_VAL" type="VOID" uuid="40bba7a4-7cfd-44b4-9029-299f83766761" />
		</retval>
	</interface>
	<grids>
		<grid height="18" uuid="e4b5d70c-8e4e-4ade-8772-c1547f5812b3" width="12">
			<optimizers all="1" enabled="1" type="awl" />
			<wires>
				<wire id="0" uuid="7630d120-71bb-48f1-b030-bb28f28138c8" />
				<wire id="1" uuid="88d62777-10b5-4f88-9eca-002772660138" />
				<wire id="2" uuid="3e7b49c5-7efd-46ae-ab5d-55a6c422c4f5" />
				<wire id="3" uuid="37013f67-b457-4d6f-b673-37e6e8078872" />
				<wire id="4" uuid="be58fd28-580f-40c9-b5e5-b732802ec3db" />
				<wire id="5" uuid="a2809771-be2d-4cc4-9cae-1c7f67df2792" />
			</wires>
			<elements>
				<element subtype="fp" type="boolean" uuid="cf47d1cf-e487-4385-9742-a46355937498" x="3" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="e7676c5a-416a-4269-a275-836f24c11fee" wire="1" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="5ea692fd-c556-4a82-b1d3-cbb1593d691b" wire="0" />
					</connections>
					<subelements>
						<element content="#INOUT1" subtype="embedded" type="operand" uuid="b8233153-0616-4e49-9ca5-ce16ddce6298" x="0" y="0" />
					</subelements>
				</element>
				<element subtype="or" type="boolean" uuid="c7bcc28f-8b61-4d36-9e5b-13ab64ba072a" x="5" y="4">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="b347d275-c646-482e-b104-4833feb21243" wire="0" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="20d139f0-4424-4ba9-9c4d-ba874b293282" wire="4" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="dcbae5af-abd4-438b-a40f-4549c533cd83" wire="5" />
					</connections>
				</element>
				<element subtype="or" type="boolean" uuid="88ab7cc3-612a-4ddb-be53-760b59872e00" x="2" y="3">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="56133b53-242d-4ce5-b074-f2df6ff0d2c5" wire="2" />
						<connection dir_in="1" dir_out="0" pos="1" uuid="900241ae-323f-48af-b023-48ed47f6304b" wire="3" />
						<connection dir_in="0" dir_out="1" pos="0" uuid="fe9c55e9-6739-4316-b362-c4d9f7560e68" wire="1" />
					</connections>
				</element>
				<element content="#IN00" subtype="load" type="operand" uuid="ebda7d6b-a88e-4239-b814-9d9cb0acc975" x="1" y="3">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="f8382e04-31a6-4f96-b244-4a5da0043cd9" wire="2" />
					</connections>
				</element>
				<element content="#IN01" subtype="load" type="operand" uuid="6f9de736-f860-449a-a367-6b42d5e54b69" x="1" y="4">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="7d2f8622-e1fe-41c9-881e-31430d613838" wire="3" />
					</connections>
				</element>
				<element content="#IN21" subtype="load" type="operand" uuid="fc2f6b11-cf5e-4feb-b382-bb4c500b41c5" x="4" y="5">
					<connections>
						<connection dir_in="0" dir_out="1" pos="0" uuid="b983f117-d166-4b0b-ba11-869357976926" wire="4" />
					</connections>
				</element>
				<element content="#OUT2" subtype="assign" type="operand" uuid="8383e344-08d0-4177-9b57-7df712d77ffd" x="6" y="5">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="f4184449-60a6-4fd0-98a6-881782e06271" wire="5" />
					</connections>
				</element>
				<element content="#OUT1" subtype="assign" type="operand" uuid="f7f7f803-001e-4fee-895a-1ee6ebdbc237" x="4" y="2">
					<connections>
						<connection dir_in="1" dir_out="0" pos="0" uuid="40314637-1cfe-4694-ac5a-ce07be93345d" wire="0" />
					</connections>
				</element>
			</elements>
		</grid>
	</grids>
</FUP>
]]></source>
	</language_fup>

	<!-- Symbol table configuration -->
	<symbols>
		<!-- symbol table source code -->
		<source enabled="1"
		        name="symbol table"
		        type="3"><![CDATA[
126,FC_assign               FC 20       FC 20
126,FC_TEST_assign          FC 21       FC 21
126,FC_and_and_or           FC 30       FC 30
126,FC_TEST_and_and_or      FC 31       FC 31
126,FC_branch               FC 40       FC 40
126,FC_TEST_branch          FC 41       FC 41
126,FC_not_1                FC 50       FC 50
126,FC_TEST_not_1           FC 51       FC 51
126,FC_not_2                FC 60       FC 60
126,FC_TEST_not_2           FC 61       FC 61
126,FC_sr_1                 FC 70       FC 70
126,FC_TEST_sr_1            FC 71       FC 71
126,FC_sr_2                 FC 80       FC 80
126,FC_TEST_sr_2            FC 81       FC 81
126,FC_sr_3                 FC 90       FC 90
126,FC_TEST_sr_3            FC 91       FC 91
126,FC_sr_4                 FC 100      FC 100
126,FC_TEST_sr_4            FC 101      FC 101
126,FC_sr_5                 FC 110      FC 110
126,FC_TEST_sr_5            FC 111      FC 111
126,FC_sr_6                 FC 120      FC 120
126,FC_TEST_sr_6            FC 121      FC 121
126,FC_edge_1               FC 130      FC 130
126,FC_TEST_edge_1          FC 131      FC 131
126,FC_edge_2               FC 140      FC 140
126,FC_TEST_edge_2          FC 141      FC 141

]]></source>
	</symbols>

	<!-- Core server link configuration -->
	<core_link>
		<!-- Locally spawned core server -->
		<spawn_local enable="1"
		             interpreters="$DEFAULT"
		             port_range_begin="4183"
		             port_range_end="8278" />

		<!-- Remote server connection -->
		<connect host="192.168.179.31"
		         port="4151"
		         timeout_ms="3000" />

		<!-- Transport tunnel -->
		<tunnel local_port="-1"
		        type="0">
			<ssh executable="ssh"
			     port="22"
			     user="pi" />
		</tunnel>
	</core_link>

	<!-- Hardware modules configuration -->
	<hardware>
		<!-- Loaded hardware module -->
		<module name="dummy">
			<params>
				<param name="inputAddressBase"
				       value="0" />
				<param name="outputAddressBase"
				       value="0" />
			</params>
		</module>
	</hardware>

	<!-- Graphical user interface configuration -->
	<gui>
		<editor autoindent="1"
		        font="Courier,11,-1,5,50,0,0,0,0,0"
		        paste_autoindent="1"
		        validation="1" />
	</gui>
</awlsim_project>
